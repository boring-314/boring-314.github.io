{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"source/images/android-chrome-192x192.png","path":"images/android-chrome-192x192.png","modified":0,"renderable":0},{"_id":"source/images/android-chrome-512x512.png","path":"images/android-chrome-512x512.png","modified":0,"renderable":0},{"_id":"source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":0},{"_id":"source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":0},{"_id":"source/images/site.webmanifest","path":"images/site.webmanifest","modified":0,"renderable":0},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","path":"css/noscript.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","path":"js/comments.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/config.js","path":"js/config.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","path":"js/schedule.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/addtoany.js","path":"js/third-party/addtoany.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/matomo.js","path":"js/third-party/analytics/matomo.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/wavedrom.js","path":"js/third-party/tags/wavedrom.js","modified":0,"renderable":1},{"_id":"source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":0},{"_id":"source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":0},{"_id":"source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1698917766143},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1698918124535},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"1a9b279e6dd29fd19245f913f0c4a316ffaa62db","modified":1698918125402},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"4bf95d52f77edf811f23f6d264a7493311a8d078","modified":1698918125402},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1698918125434},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1698918125434},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1698918125436},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1698918125436},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1698918125436},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1698918125436},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1698918125436},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1698918125436},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1698918125436},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1698918125436},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1698918125436},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1698918125436},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1698918125436},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1698918125436},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1698918125436},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1698918125436},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1698918125436},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1698918124552},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1698918124535},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1698918124568},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1698918124568},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1698918124567},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1698918124568},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1698918124568},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1698918125335},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"377d257d5d16e0158a4405c72401517b074fd7ff","modified":1698918124535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1698918124535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1698918124552},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"56597e951203dd662a6d2c817c7c4f1c920d4a25","modified":1698918124552},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1698918124552},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1698918124535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1698918124552},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f05bced793b0314d4f2ef0c993b3a51d0b7d203a","modified":1698918124552},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1698918124552},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1698918124568},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1698918124568},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1698918124535},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1698918124552},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1698918124568},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1698918124568},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1698918125402},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1698918124568},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1698918125402},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1698918124535},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1698918125402},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1698918124552},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1698918124552},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1698918124552},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1698918124568},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1698918124568},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1698918124568},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1698918125402},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1698918125418},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1698918125402},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"2d1f6f79ebf9cb55ebdb3865a2474437eb2b37c6","modified":1698918125402},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1698918125402},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1698918125402},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1698918125402},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1698918125402},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1698918125419},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1698918125369},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1698918125402},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1698918125335},{"_id":"public/2023/11/02/hello-world/index.html","hash":"539bde45dff3c3a40bd9e453f1f8485f8ef930d2","modified":1699107423568},{"_id":"public/archives/index.html","hash":"cd24c6d65716014f299c4f4e20f2bc6bd047f1f4","modified":1699107423568},{"_id":"public/archives/2023/index.html","hash":"cf1de96628d6bcda54ae229a803cb09c1f3d630d","modified":1699107423568},{"_id":"public/archives/2023/11/index.html","hash":"406e48b30d4dac89e4821c0ffc01712bdb0d620b","modified":1699107423568},{"_id":"public/index.html","hash":"494bfe93d9f2fbadad18b391b9abbad328d7b616","modified":1699107423568},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1698920824838},{"_id":"public/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1698920824838},{"_id":"public/css/style.css","hash":"ddb3792605d744ab3d9f0a649c82b62e9b16daa6","modified":1698920824838},{"_id":"public/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1698920824838},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1698920824838},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1698920824838},{"_id":"source/_posts/乘法逆元.md","hash":"a5769a945b4a53cb2887d4c5ec2f015b3cbf1058","modified":1698985506628},{"_id":"source/images/android-chrome-512x512.png","hash":"c221b9c447985cd9dc4e6c16d58eb09f166b222e","modified":1698914288000},{"_id":"source/images/android-chrome-192x192.png","hash":"c221b9c447985cd9dc4e6c16d58eb09f166b222e","modified":1698914288000},{"_id":"source/images/apple-touch-icon.png","hash":"a85581e1f15c192dc7198c0c42a926b4f8c864f0","modified":1698914288000},{"_id":"source/images/favicon-16x16.png","hash":"27a3cc11cfffa2de1136f62c2da7cc5c4582a5b0","modified":1698914288000},{"_id":"source/images/avatar.png","hash":"b96d65db27dbca4bbebaaea79a4e005684643cf8","modified":1698942990526},{"_id":"source/images/favicon-32x32.png","hash":"6aa72b13bb85c29f82090818c08d335f37f31f5f","modified":1698914288000},{"_id":"source/images/favicon.ico","hash":"16a3e401649861c0f51c9f33c7b7c112abd4d6ae","modified":1698914288000},{"_id":"source/images/site.webmanifest","hash":"5f66602ab1c500c88ecc1d1144ed6a1fa57ad9aa","modified":1698914288000},{"_id":"node_modules/hexo-theme-next/README.md","hash":"d6820f46d03a93bd6dc8b10f49f58aec82ad2b06","modified":1698941559376},{"_id":"node_modules/hexo-theme-next/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":1698941559369},{"_id":"node_modules/hexo-theme-next/_config.yml","hash":"dae3faa04648aeb0fd91961843a15122dcc73299","modified":1698941559537},{"_id":"node_modules/hexo-theme-next/_vendors.yml","hash":"bf0142e3cdb4c8da06e9aa971bc0bdf230f5db45","modified":1698941559538},{"_id":"node_modules/hexo-theme-next/package.json","hash":"282d6226513c39ad97793596922da638475a5f66","modified":1698941559361},{"_id":"node_modules/hexo-theme-next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1698941559363},{"_id":"node_modules/hexo-theme-next/languages/ar.yml","hash":"7d0f39e8684284a04bb9808521c87fecda8bd131","modified":1698941559539},{"_id":"node_modules/hexo-theme-next/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":1698941559535},{"_id":"node_modules/hexo-theme-next/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":1698941559365},{"_id":"node_modules/hexo-theme-next/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":1698941559375},{"_id":"node_modules/hexo-theme-next/languages/bn.yml","hash":"564bed75da6e05b11dce6164508f97a15e2fb6c2","modified":1698941559540},{"_id":"node_modules/hexo-theme-next/languages/de.yml","hash":"79b37df731c29665dee6cd7c90d278e1edfb6e24","modified":1698941559541},{"_id":"node_modules/hexo-theme-next/languages/en.yml","hash":"ba0fd79a2b1d8db01a034180556061745965ff05","modified":1698941559542},{"_id":"node_modules/hexo-theme-next/languages/eo.yml","hash":"e34bb33ae827bf2f0727088599a73bc64bdad1b0","modified":1698941559543},{"_id":"node_modules/hexo-theme-next/languages/es.yml","hash":"dffc63ef42e1266b88e0acf08994fd17a9908d53","modified":1698941559544},{"_id":"node_modules/hexo-theme-next/languages/fa.yml","hash":"f3ffc444599f4ac92d62e9ed00a1490ebc277d70","modified":1698941559544},{"_id":"node_modules/hexo-theme-next/languages/id.yml","hash":"929df147f4f17d638b07de5fe52ca13e2549ab1c","modified":1698941559546},{"_id":"node_modules/hexo-theme-next/languages/fr.yml","hash":"8ac44e58f71a38b7697a2f7f98a6971ed818cb5b","modified":1698941559545},{"_id":"node_modules/hexo-theme-next/languages/it.yml","hash":"16d716ecfd748def2f6486ef5a82d0ab7ceb4890","modified":1698941559547},{"_id":"node_modules/hexo-theme-next/languages/ja.yml","hash":"543222bfc516aab6c33e8534f807972ecb8943a9","modified":1698941559548},{"_id":"node_modules/hexo-theme-next/languages/nl.yml","hash":"3cb3687696635ec71b4ca40c5fc43b56acc8843e","modified":1698941559549},{"_id":"node_modules/hexo-theme-next/languages/ko.yml","hash":"d345a303310c8a5f4836c3683f3580f861ebd1b4","modified":1698941559549},{"_id":"node_modules/hexo-theme-next/languages/pt.yml","hash":"70de366e10ea584ba039d40d6b35ac97f93454ad","modified":1698941559551},{"_id":"node_modules/hexo-theme-next/languages/pt-BR.yml","hash":"76b8576ce228d540a16b1f0af5af2cce20923194","modified":1698941559550},{"_id":"node_modules/hexo-theme-next/languages/ru.yml","hash":"c6d8de0ff7d8148d09993257cfd3b7aca755696c","modified":1698941559552},{"_id":"node_modules/hexo-theme-next/languages/si.yml","hash":"2d712eedf3f60d04d36c3108cf5a12e2a52e875c","modified":1698941559552},{"_id":"node_modules/hexo-theme-next/languages/tk.yml","hash":"511726054873f6f8d7ce0d2e803f6731de0ddbe7","modified":1698941559555},{"_id":"node_modules/hexo-theme-next/languages/th.yml","hash":"6829e998b39f8f143e20b276bb1f62d95a29de58","modified":1698941559553},{"_id":"node_modules/hexo-theme-next/languages/tr.yml","hash":"a57e4ed089b893a95f5e1ecff17ce625165f4d46","modified":1698941559555},{"_id":"node_modules/hexo-theme-next/languages/uk.yml","hash":"ff537047b4b4c3ca9a7b64fa7f428a9942751eeb","modified":1698941559555},{"_id":"node_modules/hexo-theme-next/languages/vi.yml","hash":"7ebcba5e1128784195e4681dffc9d34c4e873fec","modified":1698941559556},{"_id":"node_modules/hexo-theme-next/languages/zh-CN.yml","hash":"741d7efe0262c9cdc2c648014b55599665d90f6b","modified":1698941559557},{"_id":"node_modules/hexo-theme-next/languages/zh-HK.yml","hash":"88ea50eeb9097ab4a87a44981a102d8594feb064","modified":1698941559558},{"_id":"node_modules/hexo-theme-next/languages/zh-TW.yml","hash":"4695c87d6b81b3a23d16ad6513d9eaa925f8d8ad","modified":1698941559559},{"_id":"node_modules/hexo-theme-next/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":1698941559381},{"_id":"node_modules/hexo-theme-next/layout/_layout.njk","hash":"fc0a45112f2dcfc2642404e8934ea32a793c3bd7","modified":1698941559377},{"_id":"node_modules/hexo-theme-next/layout/category.njk","hash":"c68b7343d0f8145010f93351908cc36ef6212ec1","modified":1698941559388},{"_id":"node_modules/hexo-theme-next/layout/index.njk","hash":"dd63e488ae8cc144335a5958acedf6a16edd7a92","modified":1698941559407},{"_id":"node_modules/hexo-theme-next/layout/page.njk","hash":"b0660b2af0ac7d3fda14ca4d9f2c9e79ef06c6f9","modified":1698941559420},{"_id":"node_modules/hexo-theme-next/layout/post.njk","hash":"0bfce9f133f501a9a4837257e3b862b3bbca15be","modified":1698941559433},{"_id":"node_modules/hexo-theme-next/layout/tag.njk","hash":"9e16ba20c28a7f2c6bc75aa427f48122301a30aa","modified":1698941559438},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"12a6631617695504d5cf2a94b57d87bd331bef6f","modified":1698941559367},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CONTRIBUTING.md","hash":"a089f7a8368ab0b7d7b9b7ec0ac3767a453435df","modified":1698941559368},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/README.md","hash":"12a3e96581964a22b474cc739675d52ef93ff932","modified":1698941559374},{"_id":"node_modules/hexo-theme-next/docs/ru/README.md","hash":"29c89a41b371f893e56c87ea61adabc444ec58cc","modified":1698941559373},{"_id":"node_modules/hexo-theme-next/layout/_macro/post-collapse.njk","hash":"abda600685ee972e1f6b7a2dcc56f13e2daa6263","modified":1698941559423},{"_id":"node_modules/hexo-theme-next/layout/_macro/post.njk","hash":"65e9112fb7eb26d2880db624554a99aca028140b","modified":1698941559432},{"_id":"node_modules/hexo-theme-next/layout/_scripts/index.njk","hash":"6668878a0f9a1166c6a879755f54a08d942da870","modified":1698941559403},{"_id":"node_modules/hexo-theme-next/layout/_macro/sidebar.njk","hash":"547c62ab14d9e05d2d9116db9048a677fbe1fb6d","modified":1698941559435},{"_id":"node_modules/hexo-theme-next/layout/_scripts/vendors.njk","hash":"be80b9fe415a9a09d74c28e230995fd292dfc123","modified":1698941559441},{"_id":"node_modules/hexo-theme-next/layout/_partials/footer.njk","hash":"6fca18ed4234cf54146c2b3b97b0a6a3606ab33d","modified":1698941559395},{"_id":"node_modules/hexo-theme-next/layout/_partials/comments.njk","hash":"d0c470b0f6690aa217e9ada848c5e2e73fb27c6f","modified":1698941559391},{"_id":"node_modules/hexo-theme-next/layout/_partials/languages.njk","hash":"e43f22198cccb5f6e306b1ce0d28d12a4fb891f8","modified":1698941559409},{"_id":"node_modules/hexo-theme-next/layout/_partials/pagination.njk","hash":"bc719473ed5948ab6859449d60b8d36cfc1542b4","modified":1698941559420},{"_id":"node_modules/hexo-theme-next/layout/_partials/widgets.njk","hash":"e7f988ecddb2159313699a00827a45eca5622bd4","modified":1698941559443},{"_id":"node_modules/hexo-theme-next/layout/_third-party/addtoany.njk","hash":"ef64c6bfb8540cd874701236b9be47db2496e98e","modified":1698941559378},{"_id":"node_modules/hexo-theme-next/layout/_third-party/index.njk","hash":"dfd7cdd6ba89f8c3deabc27726c7a350cadafd11","modified":1698941559405},{"_id":"node_modules/hexo-theme-next/layout/_third-party/fancybox.njk","hash":"844559f46e2ff1c8be234d5763703106e2072a7b","modified":1698941559393},{"_id":"node_modules/hexo-theme-next/layout/_third-party/pace.njk","hash":"d7ad5714079f7f65446f880baf14722435ca9061","modified":1698941559418},{"_id":"node_modules/hexo-theme-next/layout/_third-party/quicklink.njk","hash":"0efed71ed530447718c4ea5bbd5fc8695b0b0d5f","modified":1698941559433},{"_id":"node_modules/hexo-theme-next/scripts/events/index.js","hash":"bd9ea82376cd87df611ea3ae077875c7c595a3df","modified":1698941559318},{"_id":"node_modules/hexo-theme-next/scripts/helpers/engine.js","hash":"d292b78485e8e8055712b0ed6de7cf559c5fbdcd","modified":1698941559306},{"_id":"node_modules/hexo-theme-next/scripts/helpers/navigation.js","hash":"78107021101553c3d23e89290f7530b60cf4aa86","modified":1698941559336},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-paginator.js","hash":"e86c764b546e4fbb87970cabc4135a56f9ef9fe1","modified":1698941559340},{"_id":"node_modules/hexo-theme-next/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":1698941559311},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-config.js","hash":"ead37e9167b682f1fa34b5401c3050e18c7ee4a3","modified":1698941559338},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-url.js","hash":"6281d47c1de98eb38f3aa0f6df29bbb19d412173","modified":1698941559342},{"_id":"node_modules/hexo-theme-next/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":1698941559300},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-vendors.js","hash":"957241c28796ff352de7f4cffba7bb289b043586","modified":1698941559343},{"_id":"node_modules/hexo-theme-next/scripts/filters/locals.js","hash":"9eb5310664759931287dd28ea39165dfb67f12ed","modified":1698941559327},{"_id":"node_modules/hexo-theme-next/scripts/filters/post.js","hash":"fdc8a0af90035e89c3fcb754a0eb189b8951a2bc","modified":1698941559350},{"_id":"node_modules/hexo-theme-next/scripts/filters/minify.js","hash":"447db39d17775b2bd18d8af9c9d65b7b8449f751","modified":1698941559332},{"_id":"node_modules/hexo-theme-next/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":1698941559279},{"_id":"node_modules/hexo-theme-next/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":1698941559281},{"_id":"node_modules/hexo-theme-next/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":1698941559282},{"_id":"node_modules/hexo-theme-next/scripts/tags/group-pictures.js","hash":"9ed799c329abf830f623689d7e136991256a24ca","modified":1698941559315},{"_id":"node_modules/hexo-theme-next/scripts/tags/index.js","hash":"1f6aba7820f1fb58b61969485148db21846e1aa9","modified":1698941559318},{"_id":"node_modules/hexo-theme-next/scripts/tags/link-grid.js","hash":"18a483c2d5afd701f6080ffdddf2d1321370336c","modified":1698941559325},{"_id":"node_modules/hexo-theme-next/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":1698941559322},{"_id":"node_modules/hexo-theme-next/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":1698941559344},{"_id":"node_modules/hexo-theme-next/scripts/tags/mermaid.js","hash":"4fb01ca650fa8b256b8d48f50dc1b18350bd3d6d","modified":1698941559330},{"_id":"node_modules/hexo-theme-next/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":1698941559346},{"_id":"node_modules/hexo-theme-next/scripts/tags/tabs.js","hash":"0eabe51da40b4b13e16419c8fe02452d9a4fef73","modified":1698941559353},{"_id":"node_modules/hexo-theme-next/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":1698941559359},{"_id":"node_modules/hexo-theme-next/scripts/tags/wavedrom.js","hash":"b44dfeeb58b41945d469141787f3dbce4b117d08","modified":1698941559359},{"_id":"node_modules/hexo-theme-next/source/css/_colors.styl","hash":"3c6798c10cc220d83481cb3f3782e78558cee789","modified":1698941559446},{"_id":"node_modules/hexo-theme-next/source/css/_mixins.styl","hash":"83647a6207333b9609ba90b0946b3fa9548e6381","modified":1698941559454},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","hash":"dadc81256afb127b77eac6763d5ee0ec9c77f0a3","modified":1698941559506},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","hash":"921a58577f411cf4eb5cfd66db0a241f8f88578c","modified":1698941559499},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1698941559266},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1698941559443},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1698941559444},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1698941559445},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1698941559533},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1698941559277},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1698941559535},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1698941559292},{"_id":"node_modules/hexo-theme-next/source/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1698941559297},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1698941559293},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","hash":"770d63c26f22705311028a36b52e999cc8a2da82","modified":1698941559333},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","hash":"b03ba78c6916ad2f390d55bc1bc18fafb64b0ebf","modified":1698941559349},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1698941559352},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","hash":"745bd828205da7e5fbd3f860cc3697097630f5f3","modified":1698941559338},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","hash":"d775148c2bf20c028622af5609a788167352bf1e","modified":1698941559356},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head.njk","hash":"5388b157bba4a40b9312f4a45c6678974ccf0837","modified":1698941559401},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head-unique.njk","hash":"8da52a144060db1a0a088ccb2e6cc8376d1fce70","modified":1698941559399},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/index.njk","hash":"650de421a8ce4cf685428ffbe0087ff84cbd1356","modified":1698941559402},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/brand.njk","hash":"dd9c4c03e99dfde0dfb8edefcb2c933f2f560efc","modified":1698941559384},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu-item.njk","hash":"41a8b0cc16f60fa085cb719d07216d86b6bc4bf8","modified":1698941559415},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu.njk","hash":"ee6fc2f111572d3eeab0a2fecbb2d6b3e37ab26b","modified":1698941559416},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/sub-menu.njk","hash":"06480d8ec5f0b87eafd47f082f07968d7282dd5c","modified":1698941559437},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/breadcrumb.njk","hash":"89825e75cc45e9709fa6ba89883669eedaff6f46","modified":1698941559385},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":1698941559387},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":1698941559419},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/schedule.njk","hash":"0f4bc8e257da60f77c0c1738607b2bde55810684","modified":1698941559434},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":1698941559439},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-copyright.njk","hash":"bfff923526d6800218f08dba6ce0bbf5c17755fd","modified":1698941559424},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-followme.njk","hash":"c1e33b4889f75acc490af3c8bde0ec56c518ff41","modified":1698941559424},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-related.njk","hash":"e0986db00a0201dd3c60570f964829c84ba5bc68","modified":1698941559429},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-meta.njk","hash":"9fa47e4fb342811da590ee4adc91cf81118c0a39","modified":1698941559427},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-reward.njk","hash":"e8b8a7c41e9ec612d0c0c73419529d55d1c16256","modified":1698941559430},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-share.njk","hash":"16696990e4ce65fc8db18c4635082a5d5d06ff07","modified":1698941559431},{"_id":"node_modules/hexo-theme-next/layout/_partials/sidebar/site-overview.njk","hash":"bc5708e38b6070dff0cab6bf9480971017ce4dda","modified":1698941559437},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":1698941559379},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":1698941559402},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.njk","hash":"6215309aee028dcb734452beec448c5afb6c63fc","modified":1698941559382},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":1698941559411},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/cloudflare.njk","hash":"a5b8297c2c383124dd6a56e256ecc0c0dcf489be","modified":1698941559390},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/google-analytics.njk","hash":"d89066ff53879693f023e540d59c86137172c529","modified":1698941559397},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/growingio.njk","hash":"8afaa772c390bd9d53a5cff9645ac3168334eb98","modified":1698941559398},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/microsoft-clarity.njk","hash":"9dc00fcb0a05899f048eace9f9160b78956655d5","modified":1698941559417},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/matomo.njk","hash":"4e89648a8ec8194c5823064cbca39c938a799006","modified":1698941559413},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/umami.njk","hash":"3343750682fbd8535e50f8129be3003ad26015b4","modified":1698941559440},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/plausible.njk","hash":"ef9f2bb7110507f1c4336800af9157d5fa9765bd","modified":1698941559422},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/index.njk","hash":"f900306497b133e8b098bd9f4b96b93d1d96c185","modified":1698941559404},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/changyan.njk","hash":"d1c950f8fbdf85e7a3eae5463767a89e858e8220","modified":1698941559389},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqus.njk","hash":"9375b19a89b7fa9474e558d085af5448d4c5c50c","modified":1698941559392},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqusjs.njk","hash":"0749cb6902baecdfd01f779a2a2513f6d2f6a823","modified":1698941559393},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/isso.njk","hash":"64cc3bdaf644fd32c0d0a247f29f5b6904da9af3","modified":1698941559408},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/gitalk.njk","hash":"b63b7e2ede0d3e66e732fa1a06bda9b19e1e85d4","modified":1698941559396},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/livere.njk","hash":"3b13b09fba84ec6000886890a6710736a2b8fafe","modified":1698941559411},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/utterances.njk","hash":"5a94032bc3512a10ad4328fc19ec07b819a1d687","modified":1698941559440},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/chatra.njk","hash":"d7263fca16d0278ccf1f6aa1c6df6902a6344a09","modified":1698941559390},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/tidio.njk","hash":"02aab857c27fc103216029be991688b12a73a525","modified":1698941559439},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/index.njk","hash":"abf37fc55aa86702118e8fdf5bf2d389dd589aa0","modified":1698941559406},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/katex.njk","hash":"1ebf658690468ea197bdd0416eb7cfa4bd0b083a","modified":1698941559408},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/mathjax.njk","hash":"3677017fd4572b158311f5f5d870590ab25184e0","modified":1698941559412},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/algolia-search.njk","hash":"24ed76e0c72a25ac152820c750a05826a706b6f4","modified":1698941559380},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/localsearch.njk","hash":"e45ea3542cdc9ed7ec8447b5e6f35df4c5e82758","modified":1698941559412},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":1698941559386},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/firestore.njk","hash":"d32ebe94560fa95824478ebbff531bffc47b194d","modified":1698941559394},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":1698941559407},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/lean-analytics.njk","hash":"2446e748cdc102c78492216319ac02148db7daf6","modified":1698941559410},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/pdf.njk","hash":"2c81984cc4f5123103460442f6e046f5b6c97127","modified":1698941559421},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/wavedrom.njk","hash":"02202bf563fb5eedde2ccad4d6c5b9109d30a703","modified":1698941559442},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/mermaid.njk","hash":"099e031f52fb8e47b3af5b2684737efc9e643ee7","modified":1698941559416},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/highlight.js","hash":"6aec7b2c38c50989a23bfaa0d560e75c7f553e12","modified":1698941559316},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/config.js","hash":"9ec51eb61f7fee612ffc5252f489003a0fa301fc","modified":1698941559296},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/injects.js","hash":"d987709267a1bc6e5014411e9983d7c49c102c16","modified":1698941559319},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/navigation.js","hash":"dd3562686d95a50375e6fd32e717ccb0d99c1e3d","modified":1698941559335},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/utils.js","hash":"6853e5433e3eaa19ea43fa20b08d956ba4cec4ac","modified":1698941559355},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/vendors.js","hash":"464db1e7182e5b9cdbd32e8b5368d5e683b1d9c7","modified":1698941559358},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/changyan.js","hash":"5798cfc8f63665031dd3e01debed051628cec319","modified":1698941559285},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/common.js","hash":"19a402a225c31edffc50f202a14e0d582d3db23e","modified":1698941559294},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":1698941559298},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqus.js","hash":"7f71d6b271ba65ff333d5682e7575711d368c0d2","modified":1698941559301},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":1698941559320},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/gitalk.js","hash":"7bb7dafdd7f6bca8464b54e17e552ce7f1714195","modified":1698941559311},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqusjs.js","hash":"a600a98e7436edeb31e291abca359885567df3c9","modified":1698941559303},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/livere.js","hash":"5a07d8bb52bc1d51a624ca8db54be144566c306b","modified":1698941559326},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":1698941559356},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":1698941559478},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Mist.styl","hash":"a1418c9dc8c0f1a0ad4ded0f4627c45bf0db1a10","modified":1698941559502},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Muse.styl","hash":"e3be898f5ebcf435a26542653a9297ff2c71aeb0","modified":1698941559504},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"48f4f277946a168d0db1ea02804e85c22ca2c7db","modified":1698941559510},{"_id":"node_modules/hexo-theme-next/source/css/_variables/base.styl","hash":"c4fc4e862d09221265ab1466085f057be2ad2e4d","modified":1698941559465},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","hash":"819f382c561fe5ec23c67cc5fabd63dd1cc22dc1","modified":1698941559307},{"_id":"node_modules/hexo-theme-next/source/js/third-party/addtoany.js","hash":"5276c8f78ee562a8965216dc67d762e59cb4a9f2","modified":1698941559269},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1698941559344},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","hash":"ba7ba2c129d1f240c6a22cec3e53f3f22af64b6b","modified":1698941559334},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1698941559351},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"7664491542046df9a3887cf40a06e00c0b4086a9","modified":1698941559461},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/index.styl","hash":"2298e521253b3bf376a2412271bc2a7d305051f3","modified":1698941559482},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/reading-progress.styl","hash":"90a86045a33c1bae49fc2f6fa1e1b53170c7f77b","modified":1698941559519},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"d0a7c99095f490b0d2ed6b1be43d435960798cec","modified":1698941559463},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":1698941559471},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":1698941559472},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1698941559490},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1698941559505},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/pagination.styl","hash":"f4228c759db4a650c8d38745c2edd1dc83c45687","modified":1698941559508},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":1698941559530},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/toggles.styl","hash":"782ee1fc5e669d3ddbfeb82b73ad7fe561f1a4fb","modified":1698941559531},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/mobile.styl","hash":"1dbf2c339adcd27026c3a2ded32ee91ce08cea26","modified":1698941559503},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/index.styl","hash":"8e34df131830d4fa3725e4590a672ba1cf1903e5","modified":1698941559488},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"9dfe853c901bdc52fc950bacdf15484dbb9bf140","modified":1698941559493},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"dafc6d23c80d6fe3e55a7711e94210d2479b629a","modified":1698941559448},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_layout.styl","hash":"fa4fd8f76464e214fb7318f325b13c2b62f4b478","modified":1698941559450},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"fb550935d374e0bdf1097fce187337dc05cad3e1","modified":1698941559452},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_posts-expand.styl","hash":"485d23ccb42c0d0c8ead7ea8930dd3e06d79a285","modified":1698941559455},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"6569a6640f79d247a8235b3914772c0e2f99ead2","modified":1698941559451},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":1698941559494},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_header.styl","hash":"3fbfab591f280e2e7f3b0265901c93bc4bd137ed","modified":1698941559449},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sidebar.styl","hash":"547c0b5cd5e7ea10d21863d13a6b16579a49396c","modified":1698941559456},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1698941559458},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"82cda756f5b7092df2eee6641b9786df71623bdb","modified":1698941559453},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1698941559495},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_header.styl","hash":"ac2dc0ce9c775a83ef7132ae957b54539366ac9c","modified":1698941559450},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"26a0cba1eee5de45a45a5e14e17707f905390512","modified":1698941559451},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"72dc825c50357402c342d62ab60fc0c478ab6bc1","modified":1698941559454},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"91dbf3ca5c3a613d4e30618c120da535bf2d0336","modified":1698941559457},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":1698941559495},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1698941559275},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":1698941559459},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1698941559314},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1698941559315},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1698941559329},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1698941559288},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","hash":"1e826dea3f684c0515f362dc1352447a1f0eae71","modified":1698941559304},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","hash":"da361917d65e5dca8362f8cdeb6c8cc0e8316cec","modified":1698941559302},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1698941559313},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1698941559320},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1698941559357},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1698941559326},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1698941559290},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1698941559354},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1698941559328},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1698941559321},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1698941559323},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","hash":"6e0682bb42170d61b13b786295f45f9c785f8b73","modified":1698941559310},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","hash":"fdb7b7cef1a147d897e7f7cd8903b58368ec2062","modified":1698941559273},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1698941559327},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","hash":"6bf821310342c5b87a631873e7650a475a0765f1","modified":1698941559331},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1698941559348},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/wavedrom.js","hash":"40dcd10df6edf124088c329346e0cc0bdac74ef1","modified":1698941559360},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":1698941559470},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1698941559482},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"b6e2eb1550a7845cb2adf86081a4ab6c7bde1e68","modified":1698941559472},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":1698941559520},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":1698941559531},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/index.styl","hash":"098d4bd034e986fcf7e443eac4fc2193935461b7","modified":1698941559484},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"7369928305330c73ae0b3f063a681a8384d8fde4","modified":1698941559512},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-body.styl","hash":"56d5b7ff73f466c9ae54f7204ae899281295d749","modified":1698941559511},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-followme.styl","hash":"1ecfd64507954810b07a9d21fb5305b5378feda0","modified":1698941559513},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-footer.styl","hash":"11497388f124bfbb4001495a67d3629a9f618405","modified":1698941559514},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-header.styl","hash":"1191f1bfa5c43e54be8e5b3cc0d802984e161747","modified":1698941559516},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":1698941559515},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":1698941559517},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"04cf4a69537fc14d3b8904f965d283356853847f","modified":1698941559518},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/disqusjs.styl","hash":"877a537d5b95beb048142e4fdee6f17e6ef9c7bb","modified":1698941559477},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"ebfba158a0a4af3d1dabcacbc58986664de52140","modified":1698941559518},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitalk.styl","hash":"8f094c4ac17e2ab45569b12d157747f9c7333c12","modified":1698941559479},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/index.styl","hash":"54d12e2c5d9982f7b9e5b23be5133954a8514e9d","modified":1698941559485},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/math.styl","hash":"9d995eb4871a6c273d9d51558676a1fdabf69e72","modified":1698941559499},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/search.styl","hash":"e72799ce3f9b79753e365b2f8c8ef6c310668d4a","modified":1698941559521},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/utterances.styl","hash":"56d90ae0559caa55b75f3c300ff2711f9ed65fc4","modified":1698941559532},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f634f94828620e88c3f5a8db56f7944f6ba232b0","modified":1698941559474},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/fold.styl","hash":"42a0b65491ad85438596b3fe0b7f23973e4cef34","modified":1698941559478},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"d6418fd2bbfba7b73ddf11ec62db9637fdf5d8af","modified":1698941559466},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/index.styl","hash":"138f78147bc6bd6005f329ada34dc79b7625542d","modified":1698941559490},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":1698941559481},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/index.styl","hash":"22cd37bd5df9972d5074710896aba4424ad5161c","modified":1698941559491},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7f8a7345e6537a62cd9e9a94c8f7065b541d9b04","modified":1698941559498},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":1698941559497},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"48d35dba575a7c9e8845b16652e76b7d4a4646de","modified":1698941559501},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/note.styl","hash":"98d4c20aff0f0fcfe1824017fb06ab21ef0d218e","modified":1698941559507},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b6654a1d7cf82577d8263faffee8af3ad4a5c0e8","modified":1698941559509},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/tabs.styl","hash":"33dd6ad015dde65fd46f34961655442e8e82b52e","modified":1698941559530},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/wavedrom.styl","hash":"af113411ad9cca7674177be36af8dd399680834d","modified":1698941559532},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/footer/index.styl","hash":"4e967702cf4c637132346bc74ec8854426f1a68c","modified":1698941559486},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/bookmark.styl","hash":"e74f4bb47a101b014ee2a1783c87f3b87323f9a0","modified":1698941559467},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/index.styl","hash":"6e0d0796ef7fbbb62ffdfb448753a850de82c74f","modified":1698941559486},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/github-banner.styl","hash":"38c64c2d04e46848382bfa246a0e9c508294767b","modified":1698941559480},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/menu.styl","hash":"bbbc40b03cb299d2a6a568f329b2ce98e1cdc430","modified":1698941559501},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-meta.styl","hash":"a851e9d5aefcd027c95eeb323860b6da70f202d1","modified":1698941559527},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-nav.styl","hash":"bf3ad8b4268f763a1e26377681644887694bc009","modified":1698941559527},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/index.styl","hash":"da5e88f8debd5ac8d7af5c6ba6240df66104955f","modified":1698941559489},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/related-posts.styl","hash":"b05908f04ef95f2d91e6eba89b12411c378d050f","modified":1698941559519},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"0847400d8579b0a2dd1bf662c78954c10adf2680","modified":1698941559521},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":1698941559522},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"c6a27beb3f741211a14576026f3b4cfc44cc6407","modified":1698941559523},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"46eece42510c2c89bb9209afb0262ad76a4b0b36","modified":1698941559525},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"c2e354a565c8c1b32bd0ceacc972b17982758b67","modified":1698941559525},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"9a7c71560fbdc936ad4e736fe15063ea3e8a644b","modified":1698941559526},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"24752d145c6fb8f5344dca9c7b9640839c02e009","modified":1698941559525},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/site-state.styl","hash":"26dd0adfcb1db6df29c6090c8d7e9b5a43583fb0","modified":1698941559528},{"_id":"source/images/apple-touch-icon-next.png","hash":"a85581e1f15c192dc7198c0c42a926b4f8c864f0","modified":1698914288000},{"_id":"source/images/favicon-16x16-next.png","hash":"27a3cc11cfffa2de1136f62c2da7cc5c4582a5b0","modified":1698914288000},{"_id":"source/images/favicon-32x32-next.png","hash":"6aa72b13bb85c29f82090818c08d335f37f31f5f","modified":1698914288000},{"_id":"public/2023/11/02/乘法逆元/index.html","hash":"d70fde25513a4504c38a1ed23e047389f308d656","modified":1699107423568},{"_id":"public/images/android-chrome-192x192.png","hash":"c221b9c447985cd9dc4e6c16d58eb09f166b222e","modified":1698947627678},{"_id":"public/images/android-chrome-512x512.png","hash":"c221b9c447985cd9dc4e6c16d58eb09f166b222e","modified":1698947627678},{"_id":"public/images/avatar.png","hash":"b96d65db27dbca4bbebaaea79a4e005684643cf8","modified":1698947627678},{"_id":"public/images/favicon.ico","hash":"16a3e401649861c0f51c9f33c7b7c112abd4d6ae","modified":1698947627678},{"_id":"public/images/site.webmanifest","hash":"5f66602ab1c500c88ecc1d1144ed6a1fa57ad9aa","modified":1698947627678},{"_id":"public/images/apple-touch-icon-next.png","hash":"a85581e1f15c192dc7198c0c42a926b4f8c864f0","modified":1698947627678},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1698947627678},{"_id":"public/images/favicon-16x16-next.png","hash":"27a3cc11cfffa2de1136f62c2da7cc5c4582a5b0","modified":1698947627678},{"_id":"public/images/favicon-32x32-next.png","hash":"6aa72b13bb85c29f82090818c08d335f37f31f5f","modified":1698947627678},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1698947627678},{"_id":"public/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1698947627678},{"_id":"public/css/noscript.css","hash":"4cd5301e478e0e0d4b176740ec314087ec5cb707","modified":1698947627678},{"_id":"public/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1698947627678},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1698947627678},{"_id":"public/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1698947627678},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1698947627678},{"_id":"public/js/next-boot.js","hash":"745bd828205da7e5fbd3f860cc3697097630f5f3","modified":1698947627678},{"_id":"public/js/pjax.js","hash":"b03ba78c6916ad2f390d55bc1bc18fafb64b0ebf","modified":1698947627678},{"_id":"public/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1698947627678},{"_id":"public/js/motion.js","hash":"770d63c26f22705311028a36b52e999cc8a2da82","modified":1698947627678},{"_id":"public/js/third-party/addtoany.js","hash":"5276c8f78ee562a8965216dc67d762e59cb4a9f2","modified":1698947627678},{"_id":"public/js/third-party/fancybox.js","hash":"819f382c561fe5ec23c67cc5fabd63dd1cc22dc1","modified":1698947627678},{"_id":"public/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1698947627678},{"_id":"public/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1698947627678},{"_id":"public/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1698947627678},{"_id":"public/js/schemes/muse.js","hash":"ba7ba2c129d1f240c6a22cec3e53f3f22af64b6b","modified":1698947627678},{"_id":"public/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1698947627678},{"_id":"public/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1698947627678},{"_id":"public/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1698947627678},{"_id":"public/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1698947627678},{"_id":"public/js/third-party/comments/disqusjs.js","hash":"1e826dea3f684c0515f362dc1352447a1f0eae71","modified":1698947627678},{"_id":"public/js/third-party/comments/disqus.js","hash":"da361917d65e5dca8362f8cdeb6c8cc0e8316cec","modified":1698947627678},{"_id":"public/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1698947627678},{"_id":"public/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1698947627678},{"_id":"public/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1698947627678},{"_id":"public/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1698947627678},{"_id":"public/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1698947627678},{"_id":"public/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1698947627678},{"_id":"public/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1698947627678},{"_id":"public/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1698947627678},{"_id":"public/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1698947627678},{"_id":"public/js/third-party/statistics/firestore.js","hash":"6e0682bb42170d61b13b786295f45f9c785f8b73","modified":1698947627678},{"_id":"public/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1698947627678},{"_id":"public/js/third-party/search/algolia-search.js","hash":"fdb7b7cef1a147d897e7f7cd8903b58368ec2062","modified":1698947627678},{"_id":"public/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1698947627678},{"_id":"public/js/third-party/tags/mermaid.js","hash":"6bf821310342c5b87a631873e7650a475a0765f1","modified":1698947627678},{"_id":"public/js/third-party/tags/wavedrom.js","hash":"40dcd10df6edf124088c329346e0cc0bdac74ef1","modified":1698947627678},{"_id":"public/css/main.css","hash":"82b27aeb827b27f01dd9baca8c46b61ade239947","modified":1698947627678},{"_id":"public/js/utils.js","hash":"d775148c2bf20c028622af5609a788167352bf1e","modified":1698947627678},{"_id":"source/_drafts/Qexotest.md","hash":"98de6ac09b9969e3321bca9e7a524926786b6210","modified":1699107033716},{"_id":"source/_posts/Qexotest.md","hash":"98de6ac09b9969e3321bca9e7a524926786b6210","modified":1699107033716},{"_id":"public/2023/11/04/Qexotest/index.html","hash":"27fe97d295f356839917dee377ad7b59376986c4","modified":1699107423568}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-11-02T09:41:53.200Z","updated":"2023-11-02T09:36:06.143Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cloh1leh40000x8s43htx1cde","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"乘法逆元","date":"2023-11-02T15:42:07.000Z","_content":"# 乘法逆元\n## 定义\n数 $a$ 模 $p$ 意义下的**乘法逆元**($\\texttt{Modular Multiplicative Inverse}$)被定义为 _线性同余方程_ $ax\\equiv 1 \\pmod p$的解。\n\n## 条件\n$\\gcd(a,p)=1$是数 $a$ 在模 $p$ 意义下存在乘法逆元的充分必要条件。\n## 求法\n### 1.扩展欧几里得法\n既然乘法逆元是线性同余方程的解，那么使用扩展欧几里得算法$(\\texttt{Extended Euclidean algorithm, EXGCD})$求出方程的通解。再经转换即可求出特解。\n#### 过程\n将同余方程 $ax\\equiv 1 \\pmod p$ 改写为如下形式\n$$\n\\begin{aligned}\nax+py &=1 &(1)\n\n\\end{aligned}\n$$\n\n其中$x,y$是未知数。显然，这两个方程是等价的。\n> 由裴蜀定理可得，方程$ax\\equiv b \\pmod p$ **有整数解**的充分必要条件是 $\\gcd(a,p)\\mid 1$ ，且容易将其转换为: $\\gcd(a,p)=1$\n> \n> 也就是说，满足如下条件时，才能使用扩展欧几里得算法求解逆元：\n> $$\\gcd(a,p)=1$$\n> 即需要 $a,p$ 互质。\n\n所以我们可将等式$(1)$再次改写为\n\n$$ax+py=\\gcd(a,p)$$\n\n这就化为扩欧求解方程的一般形式 $ax+by=\\gcd(a,b)$ 了。接下来使用扩欧求解即可\n\n$$\\begin{aligned}\n\\text{设}&:\\\\\n&ax_{1}+py_{1}=\\gcd(a,p)\\\\\n&px_2+(a\\bmod p)y_2=\\gcd(p,a\\bmod p)\\\\\n\\because&\\space\\text{由欧几里得定理知}\\ \\gcd(a,p)=\\gcd(p,a\\bmod p)\\\\\n\\therefore&\\space ax_{2}+py_{1}=px_2+(a\\bmod p)y_2\\\\\n\\because&\\space a\\bmod p=a-\\lfloor\\frac{a}{p}\\rfloor p\\\\\n\\therefore&\\space ax_1+py_1=px_2+\\left(a-\\lfloor\\frac{a}{p}\\rfloor p\\right)y_2\\\\\n\\therefore\\space &ax_1+py_1=ay_2+p\\left(x_2-\\lfloor\\frac{a}{p}\\rfloor y_2\\right)\\\\\n\\because&\\space a=a,p=p\\\\\n\\therefore&\\space \\text{比对法可得}\\\\\n&\\begin{cases}\nx_1=y_2,\\\\\ny_1=x_2-\\lfloor\\frac{a}{p}\\rfloor y_2.\n\\end{cases}\n\\end{aligned}$$\n由此我们得到了 $x_1,y_1$ 与 $x_2,y_2$之间的关系，又因为它们都与 $\\gcd(a,p)$ 有关，所以只需要将 $x_2,y_2$ 在求$\\gcd(a,p)$的过程中一并计算，辗转相除直到 $p_i=0,\\gcd(a_i,p_i)=a_i$ 时返回$x_2=1,y_2=0$ 来递归求解即可求出在线性同余方程 $ax\\equiv 1 \\pmod p$ 中 $x$ 的通解。\n\n求出**通解** $x_0$ 后，一个**特解**(_最小正整数解_ )即为\n\n$$\\begin{aligned}\nx&=\\left(x_0\\bmod \\frac{p}{\\gcd(a,p)}+\\frac{p}{\\gcd(a,p)}\\right)\\bmod \\frac{p}{\\gcd(a,p)}\\\\\n&=\\left(x_0\\bmod \\frac{p}{1}+\\frac{p}{1}\\right)\\bmod \\frac{p}{1}\\\\\n&=\\left(x_0\\bmod p+p\\right)\\bmod p.\n\\end{aligned}$$\n\n$a$ 在模 $p$ 意义下的乘法逆元即为 $x$ 的值。 \n#### 实现\n以下是扩展欧几里得算法的伪代码\n\n$$\n\\begin{array}{ll}\n&\\textbf{Extended Euclidean algorithm }\\operatorname{exgcd}(\\mathbf{a}, \\mathbf{b}, ⇒{\\mathbf{x} }, ⇒\\mathbf{y})\\text{:} \\\\\n1 &  \\textbf{Parameters. } a,b\\in\\mathbb{Z}^+,b\\ne0.\\space x \\text{ and } y \\text{ are bit references}.\\\\\n  &  \\text{Denoting the }a,b,x\\text{ and }y\\text{ in the equation } \\boxed{ax+by=\\operatorname{gcd}(a,b)}. \\\\\n  &\\text{Initialize } x\\gets\\varnothing,y\\gets\\varnothing\\\\\n2 &  \\textbf{Return value. } \\text{The GCD between }a\\text{ and }b.\\\\\n  &  \\textbf{Accompanying results }x\\text{ and }y \\text{ is the solution to the equation}.\\\\\n3 &  \\textbf{Method. } \\\\\n4 &  \\textbf{if }b=0 \\\\\n5 &  \\qquad x\\gets1 \\\\\n6 &  \\qquad y\\gets0\\\\\n7 &  \\qquad \\textbf{return }\\ a \\\\\n8 &  {result}_{ {\\operatorname{\\textbf{(new)} } } }\\gets\\operatorname{exgcd}\\left(b,a\\bmod b,x,y\\right) \\\\\n&  (\\texttt{At this point the values of }x\\texttt{ and }y\\texttt{ have changed}.)\\\\\n9 &  x_{2{\\operatorname{\\textbf{(new)} } } }\\gets x\\\\\n11 & y_{2{\\operatorname{\\textbf{(new)} } } }\\gets y\\\\\n12 &  x\\gets y_2\\\\\n13 & y\\gets x_2-\\lfloor\\dfrac{a}{b}\\rfloor y_2\\\\\n14 &  \\textbf{return }\\ result\\\\\n\n\\end{array}\n$$\n\n\n\n#### 复杂度\n\n扩展欧几里得算法的时间复杂度与欧几里得算法（辗转相除法）无异，均为\n\n$$\\text{O}(\\log p) $$\n\n#### 优劣\n##### 优势\n扩展欧几里得法求解乘法逆元只需满足 $\\gcd(a,p)=1,$ 即原数与模数互质即可，而后文提到其他算法均，需另外要求 $p$ 为质数，即模数要为质数。\n###### 劣势\n- 扩展欧几里得法求解乘法逆元的过程较为复杂，记忆较困难。\n\n- 速度：大多使用递归实现辗转相除法，比其他迭代实现的算法常数要高一些，跑得慢。\n\n- 在求多个数逆元时必须多次运算，复杂度高，所以一般只能用于求出单个数的逆元。\n\n------------\n\n### 2.快速幂法\n\n当 $\\gcd(a,p)=1,$**$\\boldsymbol{p}$为质数** 时,借助费马小定理$(\\texttt{Fermat's Little Theorem})$可转化同余方程 $ax\\equiv 1 \\pmod p$，得其通解 $x_0=a^{p-2}$\n#### 过程\n$$\\begin{aligned}\n\\because&\\space\\text{当 } p\\text{ 为质数时}:\\\\\n&\\space a^{p-1}\\equiv1{\\pmod p}\\text{ (费马小定理)}\\\\\n\\text{又}&\\space ax\\equiv 1 \\pmod p\\\\\n\\therefore&\\space ax\\equiv a^{p-1}\\pmod{p}\\\\\n\\because&\\space \\gcd(a,p)=1\\\\\n\\therefore&\\space x\\equiv a^{p-2}\\pmod{p}\n\\end{aligned}$$\n然后即可用快速幂求出 $a^{p-2}$ 的值，即求出一个通解 $x_0$ 了\n\n在大部分情况下$,a>0,$ 所以此时 $a^{p-2}>0$ ，求不求特解都无所谓了。\n\n\n\n#### 实现\n以下是快速幂法求解逆元的伪代码\n$$\n\\begin{array}{ll}\n&\\overline{\\underline{\\textbf{Modular Multiplicative Inverse Solving Algorithm by Exponentiation} } }\\\\\n1 & \\textbf{Fast Power Algorithm } \\operatorname{exponentiation}(\\mathbf{a},\\mathbf{b},\\mathbf{p})\\text{:}\\\\\n2 & \\textbf{Parameters. } a,b,p\\in\\mathbb{N}^+.\\\\\n  & \\text{Denoting the base } a,\\text{the exponent }b\\text{ and the modulus }p.\\\\\n3 & \\textbf{Returned value. }\\text{the value of }\\boxed{a^b\\bmod{p} }\\\\\n4 & \\textbf{Method.}\\\\\n5 & {base}_{\\operatorname{\\textbf{(new)} } }\\gets a\\\\\n6 & result_{\\operatorname{\\textbf{(new)} } }\\gets 1\\\\\n7 & \\textbf{while}\\space b>0\\space\\textbf{do}\\\\\n8 & \\qquad \\textbf{if }2\\nmid b\\textbf{ then}\\\\\n9 & \\qquad \\qquad result\\gets result\\cdot base\\bmod{p}\\\\\n10 & \\qquad base\\gets {base}^{2}\\bmod p\\\\\n11 & \\qquad b\\gets\\lfloor\\dfrac{b}{2}\\rfloor\\\\\n12 & \\textbf{end}\\\\\n13 & \\textbf{return } result\\\\\\\\\n14 & \\textbf{Multiplicative Inverse Solving Algorithm }\\text{getInverse(\\textbf{a},\\textbf{p}):}\\\\\n15 & \\textbf{Parameters. } a,p\\in\\mathbb{N}^+,a\\ne 0,\\gcd(a,p)=1,p\\text{ is a prime}.\\\\\n  & \\text{Denoting the coefficient } a\\text{ and the modulus }p \\text{ in the congruence equation}\\boxed{ax\\equiv 1\\pmod{p} }.\\\\\n16 & \\textbf{Returned value. }\\text{the modular multiplicative inverse of $a$: }\\space a^{-1},\\\\\n & \\text{which is the solution to the congruence equation}\\boxed{ax\\equiv 1\\pmod{p} }.\\\\\n\n17 & \\textbf{Method.}\\\\\n18 & result_{\\operatorname{\\textbf{({new})} } }\\gets\\operatorname{exponentiation}(a,p-2,p)\\bmod{p}\\\\\n& \\textbf{return }result\n\\end{array}\n$$\n\n#### 复杂度\n快速幂求逆元的复杂度就是快速幂的复杂度，即\n\n$$\\text{O}(\\log p)$$\n\n#### 优劣\n##### 优势\n快速幂法求逆元十分容易记忆理解，代码难度小。使用迭代实现快速幂，常数小。\n##### 劣势\n- 局限性：只能用于求模数为质数情况下的逆元，局限性较大。\n\n- 还是只在求单个数逆元时快。\n\n\n------------\n\n### 3.线性迭代法\n为求出$1,2,\\dots,n$这$n$个数中每个数 $a$ 在模 $p$ 意义下的逆元 $a^{-1}$ ，上文两种方法就很慢了，我们需要使用线性方法在$\\text{O}(n) $复杂度内求出每个数的逆元才不会超时。\n#### 过程\n$$\\begin{aligned}\n&\\space \\text{对于正整数 }a\\ (1\\leq a\\leq n),\\text{有}\\\\\n&\\space p=a\\lfloor\\frac{p}{a}\\rfloor+p\\bmod a\\\\\n\\because&\\space p\\equiv 0\\pmod{p}\\\\\n\\therefore&\\space a\\lfloor\\frac{p}{a}\\rfloor+p\\bmod a\\equiv 0\\pmod{p}\\\\\n&\\space \\text{将同余式两边同时乘以 }a^{-1}(p\\bmod a)^{-1}\\text{得到}\\\\\n&\\space \\lfloor\\frac{p}{a}\\rfloor\\left(p\\bmod a\\right)^{-1}+a^{-1}\\equiv 0\\pmod{p}\\\\\n\\therefore&\\space a^{-1}\\equiv - \\lfloor\\frac{p}{a}\\rfloor\\left(p\\bmod a\\right)^{-1}\\pmod{p}\\\\\n\\because&\\space \\text{显然 }1^{-1}\\equiv 1\\pmod p,\\text{且 }p\\bmod a< a\\\\\n&\\space \\text{也就是说，正向递推求解$a^{-1}$是可行的.}\\\\\n\\therefore&\\space \\text{可得出从$a=1$开始，$a^{-1}$的递推式}:\\\\\n&\\space a^{-1}\\equiv\\begin{cases}\n1&\\text{if }a=1,\\\\\n-\\lfloor\\dfrac{p}{a}\\rfloor\\left(p\\bmod a\\right)^{-1}&\\text{otherwise.}\n\\end{cases}\n\\end{aligned}$$\n这样我们在已经迭代求出所有$i^{-1}(i<a)$的情况下就可以求出$a^{-1}$的值了。\n\n$(\\textbf{!})$但是，有一点需要注意：由于 C++ 取模运算的特殊性，被**负数**取模得到的值**还是负数**，这是我们绝对不想看到的，所以我们在具体代码实现时，需要将 $-\\lfloor\\dfrac{p}{a}\\rfloor$ 改写为 $\\left(p-\\lfloor\\dfrac{p}{a}\\rfloor\\right)$ 来实现等价而不会出现负数的操作。\n#### 实现\n以下是线性递推迭代求解逆元方法的伪代码\n$$\n\\begin{array}{ll}\n & \\textbf{Linear Modular Multiplicative Inverse Solving Algorithm }\\operatorname{getInverses}(\\textbf{n},\\textbf{p}):\\\\\n1 & \\textbf{Parameters. } n,p\\in\\mathbb{N}^+,p\\text{ is a prime}.\\\\\n & \\text{Denoting the number of factors $n$ ,the modulus $b$}\\\\\n2 & \\textbf{Returned value. } \\text{An array that holds the inverse of each a}.\\\\\n3 & \\textbf{Method.}\\\\\n4 & {inv}_{\\operatorname{\\textbf{(new)} }1}=1\\\\\n & \\mathtt{Note:}\\ {inv}_{i}=i^{-1}\\texttt{,which denotes the inverse of }i.\\\\\n5 & \\textbf{for }i_{\\operatorname{\\textbf{(new)} } }\\textbf{ from }2\\textbf{ to }n\\textbf{ do}\\\\\n6 & \\qquad {inv}_i\\gets\\left(p-\\lfloor\\dfrac{p}{i}\\rfloor\\right)\\cdot{inv}_{(p\\bmod i)}\\bmod p\\\\\n7 & \\textbf{end}\\\\\n8 & \\textbf{return }inv\n\\end{array}\n$$\n#### 复杂度\n\n显然为\n$$\\operatorname{O}(n)$$\n\n#### 优劣\n##### 优势\n在要求序列$1,2,\\ldots,n$里每个数的乘法逆元时，扩欧法和快速幂法都需要$\\operatorname{O}(n\\log p)$的复杂度来解决，此时$\\operatorname{O}(n)$的线性算法就占很大优势。另外线性递推算法在数据范围小且模数确定时还可以用于打表，贴到代码上$\\operatorname{O}(1)$就行了，嘻嘻。\n##### 劣势\n- 局限性：仅当模数为质数时，线性递推法才可用\n> 证明：感性理解一下，由于仅当 $\\gcd(a,p)=1$ 时线性同余方程\n> $ax\\equiv1\\pmod{p}$ 才有解，$a^{-1}$才存在，那么当 $p$ 不为质数时，\n> 要使线性递推法可用，$1,2,\\ldots,n$ 每个数都必须与 $p$ 互质，这怎么可能呢？\n- 仅在求$1,2,\\ldots,n$的逆元时才占优势，偏要将递推式转为递归求解单个数逆元已知的复杂度上界仅为$\\operatorname{O(\\sqrt[3]{n})}$，更优的算法有扩欧法和快速幂法。\n\n\n------------\n\n### 4.阶乘逆推法\n同样是求$1,2,\\dots,n$这$n$个数中每个数 $a$ 在模 $p$ 意义下的逆元 $a^{-1}$，有没有一种更易于理解的方法呢？答案是肯定的。我们只需要利用逆元与原数相乘抵消成单位元的性质，即可利用阶乘求解。\n#### 过程\n$$\\begin{aligned}\n\\text{显然}&\\space{i!}^{-1}={(i+1)!}^{-1}\\times(i+1),&(1)\\\\\n&\\space i^{-1}=\\frac{(i-1)!}{i!}=(i-1)!\\cdot {i!}^{-1}&(2) \n\\end{aligned}$$\n所以对于$1,2,\\dots,n$，我们先处理出$1$至$n$的阶乘(模 $p$ 意义下)，然后只需要跑一遍 扩展欧几里得 或 快速幂($p$为质数) 求出 $n!^{-1}$，然后依据$(1)$逆推就能依次求出$(n-1)!^{-1},(n-2)!^{-1},\\ldots,2!^{-1},1!^{-1}$的值，同时在迭代求出$i!^{-1}$后，由于$i!,(i-1)!$已经被预处理出来了，即可用$(2)$求出$i^{-1}$.\n#### 实现\n以下是阶乘逆推法求逆元的伪代码\n$$\n\\begin{array}{ll}\n & \\textbf{Factorial Modular Multiplicative Inverse Solving Algorithm }\\operatorname{getInverses}(\\textbf{n},\\textbf{p}):\\\\\n1 & \\textbf{Parameters. } n,p\\in\\mathbb{N}^+,p\\text{ is a prime}.\\\\\n & \\text{Denoting the number of factors $n$ and the modulus $p$}\\\\\n2 & \\textbf{Returned value. } \\text{An array that holds the inverse of each }a\\in\\mathbb{N^+}\\cap[1,n].\\\\\n3 & \\textbf{Method.}\\\\\n4 & {fac}_{\\operatorname{(new)}0}\\gets 1\\\\\n5 & {fac}_{1}\\gets 1\\\\\n & \\mathtt{Note:}\\ {fac}_{i}=i!\\texttt{,which denotes the factorial of }i.\\\\\n6 & \\textbf{for }i_{\\operatorname{\\textbf{(new)} } }\\textbf{ from }2\\textbf{ to }n\\textbf{ do}\\\\\n8 & \\qquad fac_i\\gets fac_{i-1}\\times i\\bmod p\\\\\n9 & \\textbf{end}\\\\\n9 & G_{\\operatorname{(new)} }\\gets\\operatorname{exgcd}(fac_{n},p,x_{\\operatorname{(new)} },y_{\\operatorname{(new)} })\\\\\n10 & {invfac}_{\\operatorname{(new)}n}\\gets(x\\bmod p+p)\\bmod p\\\\\n{(\\mathbf{i})} &\\overline{\\texttt{It's equivalent to the code below.} }\\\\\n\\mathit{10} & \\underline{invfac_{\\operatorname{(new)}n}\\gets fac_n^{p-2}\\bmod p\\hspace{1.3cm} }\\\\\n & \\mathtt{Note:}\\ {invfac}_{i}=i!^{-1}\\texttt{,which denotes the inverse of the factorial of }i.\\\\\n11 & inv_{\\operatorname{(new)}n}\\gets invfac_{n}\\times fac_{n-1}\\bmod p\\\\\n & \\mathtt{Note:}\\ {inv}_{i}=i^{-1}\\texttt{,which denotes the inverse of }i.\\\\\n12 & \\textbf{for } i_{\\operatorname{(new)} }\\textbf{ from }n-1\\textbf{ to } 1\\textbf{ do}\\\\\n13 & \\qquad invfac_i\\gets {invfac}_{i+1}(i+1)\\bmod p\\\\\n14 & \\qquad inv_i\\gets {invfac}_{i}\\times {fac}_{i-1}\\bmod p\\\\\n15 & \\textbf{end}\\\\\n16 & \\textbf{return }inv\n\\end{array}\n$$\n\n#### 复杂度\n\n求 $n!^{-1}$ 的复杂度是$\\operatorname{O}(\\log p)$,求 $n!$ 与迭代逆推的复杂度均为$\\operatorname{O}(n)$，所以总复杂度是\n$$\\operatorname{O}(n+\\log p)$$\n\n#### 优劣\n\n同线性迭代法.\n\n\n------------\n\n\n### 5.前缀积逆推-求任意n个数逆元\n首先我们注意到，使用阶乘逆推法时，由于是从 $n$ 开始逆推，并不依赖从 $1$ 开始到 $n$ 的条件。其次，我们使用阶乘只是为了利用逆元与原数相消的性质，完全可以把阶乘 $i!$ 看成是$1,2,\\ldots,i$的前缀积，那么我们就可以用前缀积的方式，将阶乘法推广，来求任意 $n$ 个数 $a_1,a_2,\\ldots,a_n$ 各自的逆元.\n\n#### 过程\n$$\\begin{aligned}\n\\text{显然}&\\space{\\left({\\prod_{k=1}^i{a_k} }\\right)}^{-1}={ {\\left({\\prod_{k=1}^{i+1}a_k}\\right)}^{-1} }\\times a_{i+1},&(1)\\\\\n&\\space a_i^{-1}=\\frac{\\prod_{k=1}^{i-1}a_k}{\\prod_{k=1}^ia_k}=\\left(\\prod_{k=1}^{i-1}a_k\\right)\\left({\\prod_{k=1}^{i}a_k}\\right)^{-1}&(2) \n\\end{aligned}$$\n只需据$(1)(2)$逆推即可。我们把求积改为前缀积实现，即可大大优化算法。\n\n#### 实现\n\n以下是前缀积逆推的伪代码\n\n$$\n\\begin{array}{ll}\n & \\textbf{Prefix product Modular Multiplicative Inverse Solving Algorithm }\\operatorname{getInverses}(\\textbf{n},\\textbf{p},\\mathbf{ {^*}a}):\\\\\n\n\n1 & \\textbf{Parameters. } n,p\\in\\mathbb{N}^+,p\\text{ is a {prime} },\\text{$a$ is a \\textbf{pointer} to the address of the first element of \\textbf{an array of $n$ factors} }.\\\\\n\n\n & \\text{Denoting the number of factors $n$ ,the modulus $p$ and the sequence $a$.}\\\\\n \n \n2 & \\textbf{Returned value. } \\text{An array that holds the inverse of each }a_i.\\\\\n3 & \\textbf{Method.}\\\\\n4 & {prod}_{\\operatorname{(new)}0}\\gets 1\\\\\n & \\mathtt{Note:}\\ prod_i={\\prod_{k=1}^ia_k}\\texttt{,which denotes the }i^{\\operatorname{th} } \\texttt{ prefix product in } a.\\\\\n5 & \\textbf{for }i_{\\operatorname{\\textbf{(new)} } }\\textbf{ from }1\\textbf{ to }n\\textbf{ do}\\\\\n6 & \\qquad prod_i\\gets prod_{i-1}\\times a_i\\bmod p\\\\\n7 & \\textbf{end}\\\\\n8 & G_{\\operatorname{(new)} }\\gets\\operatorname{exgcd}(prod_{n},p,x_{\\operatorname{(new)} },y_{\\operatorname{(new)} })\\\\\n9 & {invprod}_{\\operatorname{(new)}n}\\gets(x\\bmod p+p)\\bmod p\\\\\n{(\\mathbf{i})} &\\overline{\\texttt{It's equivalent to the code below.} }\\\\\n\\mathit9 & \\underline{invprod_{\\operatorname{(new)}n}\\gets prod_n^{p-2}\\bmod p\\hspace{1.3cm} }\\\\\n & \\mathtt{Note:}\\ {invprod}_{i}={\\left(\\prod_{k=1}^ia_k\\right)}^{-1}\\texttt{,which denotes the inverse of the prefix product of }a_i.\\\\\n10 & inv_{\\operatorname{(new)}n}\\gets invprod_{n}\\times prod_{n-1}\\bmod p\\\\\n & \\mathtt{Note:}\\ {inv}_{i}=a_i^{-1}\\texttt{,which denotes the inverse of }a_i.\\\\\n11 & \\textbf{for } i_{\\operatorname{(new)} }\\textbf{ from }n-1\\textbf{ to } 1\\textbf{ do}\\\\\n12 & \\qquad invprod_i\\gets {invprod}_{i+1}\\cdot a_{i+1}\\bmod p\\\\\n13 & \\qquad inv_i\\gets {invprod}_{i}\\times {prod}_{i-1}\\bmod p\\\\\n14 & \\textbf{end}\\\\\n15 & \\textbf{return }inv\n\\end{array}\n$$\n\n\n#### 复杂度\n\n类似阶乘法，为\n$$\\operatorname{O}(n+\\log p)$$\n\n#### 优劣\n##### 优势\n前缀积逆推法能够求解任意 $n$ 个数的逆元，更加灵活。\n\n##### 劣势\n- 局限性：仅能模数为素数。\n- 需要用到单个数求逆元。","source":"_posts/乘法逆元.md","raw":"---\ntitle: 乘法逆元\ndate: 2023-11-02 23:42:07\ntags:\n---\n# 乘法逆元\n## 定义\n数 $a$ 模 $p$ 意义下的**乘法逆元**($\\texttt{Modular Multiplicative Inverse}$)被定义为 _线性同余方程_ $ax\\equiv 1 \\pmod p$的解。\n\n## 条件\n$\\gcd(a,p)=1$是数 $a$ 在模 $p$ 意义下存在乘法逆元的充分必要条件。\n## 求法\n### 1.扩展欧几里得法\n既然乘法逆元是线性同余方程的解，那么使用扩展欧几里得算法$(\\texttt{Extended Euclidean algorithm, EXGCD})$求出方程的通解。再经转换即可求出特解。\n#### 过程\n将同余方程 $ax\\equiv 1 \\pmod p$ 改写为如下形式\n$$\n\\begin{aligned}\nax+py &=1 &(1)\n\n\\end{aligned}\n$$\n\n其中$x,y$是未知数。显然，这两个方程是等价的。\n> 由裴蜀定理可得，方程$ax\\equiv b \\pmod p$ **有整数解**的充分必要条件是 $\\gcd(a,p)\\mid 1$ ，且容易将其转换为: $\\gcd(a,p)=1$\n> \n> 也就是说，满足如下条件时，才能使用扩展欧几里得算法求解逆元：\n> $$\\gcd(a,p)=1$$\n> 即需要 $a,p$ 互质。\n\n所以我们可将等式$(1)$再次改写为\n\n$$ax+py=\\gcd(a,p)$$\n\n这就化为扩欧求解方程的一般形式 $ax+by=\\gcd(a,b)$ 了。接下来使用扩欧求解即可\n\n$$\\begin{aligned}\n\\text{设}&:\\\\\n&ax_{1}+py_{1}=\\gcd(a,p)\\\\\n&px_2+(a\\bmod p)y_2=\\gcd(p,a\\bmod p)\\\\\n\\because&\\space\\text{由欧几里得定理知}\\ \\gcd(a,p)=\\gcd(p,a\\bmod p)\\\\\n\\therefore&\\space ax_{2}+py_{1}=px_2+(a\\bmod p)y_2\\\\\n\\because&\\space a\\bmod p=a-\\lfloor\\frac{a}{p}\\rfloor p\\\\\n\\therefore&\\space ax_1+py_1=px_2+\\left(a-\\lfloor\\frac{a}{p}\\rfloor p\\right)y_2\\\\\n\\therefore\\space &ax_1+py_1=ay_2+p\\left(x_2-\\lfloor\\frac{a}{p}\\rfloor y_2\\right)\\\\\n\\because&\\space a=a,p=p\\\\\n\\therefore&\\space \\text{比对法可得}\\\\\n&\\begin{cases}\nx_1=y_2,\\\\\ny_1=x_2-\\lfloor\\frac{a}{p}\\rfloor y_2.\n\\end{cases}\n\\end{aligned}$$\n由此我们得到了 $x_1,y_1$ 与 $x_2,y_2$之间的关系，又因为它们都与 $\\gcd(a,p)$ 有关，所以只需要将 $x_2,y_2$ 在求$\\gcd(a,p)$的过程中一并计算，辗转相除直到 $p_i=0,\\gcd(a_i,p_i)=a_i$ 时返回$x_2=1,y_2=0$ 来递归求解即可求出在线性同余方程 $ax\\equiv 1 \\pmod p$ 中 $x$ 的通解。\n\n求出**通解** $x_0$ 后，一个**特解**(_最小正整数解_ )即为\n\n$$\\begin{aligned}\nx&=\\left(x_0\\bmod \\frac{p}{\\gcd(a,p)}+\\frac{p}{\\gcd(a,p)}\\right)\\bmod \\frac{p}{\\gcd(a,p)}\\\\\n&=\\left(x_0\\bmod \\frac{p}{1}+\\frac{p}{1}\\right)\\bmod \\frac{p}{1}\\\\\n&=\\left(x_0\\bmod p+p\\right)\\bmod p.\n\\end{aligned}$$\n\n$a$ 在模 $p$ 意义下的乘法逆元即为 $x$ 的值。 \n#### 实现\n以下是扩展欧几里得算法的伪代码\n\n$$\n\\begin{array}{ll}\n&\\textbf{Extended Euclidean algorithm }\\operatorname{exgcd}(\\mathbf{a}, \\mathbf{b}, ⇒{\\mathbf{x} }, ⇒\\mathbf{y})\\text{:} \\\\\n1 &  \\textbf{Parameters. } a,b\\in\\mathbb{Z}^+,b\\ne0.\\space x \\text{ and } y \\text{ are bit references}.\\\\\n  &  \\text{Denoting the }a,b,x\\text{ and }y\\text{ in the equation } \\boxed{ax+by=\\operatorname{gcd}(a,b)}. \\\\\n  &\\text{Initialize } x\\gets\\varnothing,y\\gets\\varnothing\\\\\n2 &  \\textbf{Return value. } \\text{The GCD between }a\\text{ and }b.\\\\\n  &  \\textbf{Accompanying results }x\\text{ and }y \\text{ is the solution to the equation}.\\\\\n3 &  \\textbf{Method. } \\\\\n4 &  \\textbf{if }b=0 \\\\\n5 &  \\qquad x\\gets1 \\\\\n6 &  \\qquad y\\gets0\\\\\n7 &  \\qquad \\textbf{return }\\ a \\\\\n8 &  {result}_{ {\\operatorname{\\textbf{(new)} } } }\\gets\\operatorname{exgcd}\\left(b,a\\bmod b,x,y\\right) \\\\\n&  (\\texttt{At this point the values of }x\\texttt{ and }y\\texttt{ have changed}.)\\\\\n9 &  x_{2{\\operatorname{\\textbf{(new)} } } }\\gets x\\\\\n11 & y_{2{\\operatorname{\\textbf{(new)} } } }\\gets y\\\\\n12 &  x\\gets y_2\\\\\n13 & y\\gets x_2-\\lfloor\\dfrac{a}{b}\\rfloor y_2\\\\\n14 &  \\textbf{return }\\ result\\\\\n\n\\end{array}\n$$\n\n\n\n#### 复杂度\n\n扩展欧几里得算法的时间复杂度与欧几里得算法（辗转相除法）无异，均为\n\n$$\\text{O}(\\log p) $$\n\n#### 优劣\n##### 优势\n扩展欧几里得法求解乘法逆元只需满足 $\\gcd(a,p)=1,$ 即原数与模数互质即可，而后文提到其他算法均，需另外要求 $p$ 为质数，即模数要为质数。\n###### 劣势\n- 扩展欧几里得法求解乘法逆元的过程较为复杂，记忆较困难。\n\n- 速度：大多使用递归实现辗转相除法，比其他迭代实现的算法常数要高一些，跑得慢。\n\n- 在求多个数逆元时必须多次运算，复杂度高，所以一般只能用于求出单个数的逆元。\n\n------------\n\n### 2.快速幂法\n\n当 $\\gcd(a,p)=1,$**$\\boldsymbol{p}$为质数** 时,借助费马小定理$(\\texttt{Fermat's Little Theorem})$可转化同余方程 $ax\\equiv 1 \\pmod p$，得其通解 $x_0=a^{p-2}$\n#### 过程\n$$\\begin{aligned}\n\\because&\\space\\text{当 } p\\text{ 为质数时}:\\\\\n&\\space a^{p-1}\\equiv1{\\pmod p}\\text{ (费马小定理)}\\\\\n\\text{又}&\\space ax\\equiv 1 \\pmod p\\\\\n\\therefore&\\space ax\\equiv a^{p-1}\\pmod{p}\\\\\n\\because&\\space \\gcd(a,p)=1\\\\\n\\therefore&\\space x\\equiv a^{p-2}\\pmod{p}\n\\end{aligned}$$\n然后即可用快速幂求出 $a^{p-2}$ 的值，即求出一个通解 $x_0$ 了\n\n在大部分情况下$,a>0,$ 所以此时 $a^{p-2}>0$ ，求不求特解都无所谓了。\n\n\n\n#### 实现\n以下是快速幂法求解逆元的伪代码\n$$\n\\begin{array}{ll}\n&\\overline{\\underline{\\textbf{Modular Multiplicative Inverse Solving Algorithm by Exponentiation} } }\\\\\n1 & \\textbf{Fast Power Algorithm } \\operatorname{exponentiation}(\\mathbf{a},\\mathbf{b},\\mathbf{p})\\text{:}\\\\\n2 & \\textbf{Parameters. } a,b,p\\in\\mathbb{N}^+.\\\\\n  & \\text{Denoting the base } a,\\text{the exponent }b\\text{ and the modulus }p.\\\\\n3 & \\textbf{Returned value. }\\text{the value of }\\boxed{a^b\\bmod{p} }\\\\\n4 & \\textbf{Method.}\\\\\n5 & {base}_{\\operatorname{\\textbf{(new)} } }\\gets a\\\\\n6 & result_{\\operatorname{\\textbf{(new)} } }\\gets 1\\\\\n7 & \\textbf{while}\\space b>0\\space\\textbf{do}\\\\\n8 & \\qquad \\textbf{if }2\\nmid b\\textbf{ then}\\\\\n9 & \\qquad \\qquad result\\gets result\\cdot base\\bmod{p}\\\\\n10 & \\qquad base\\gets {base}^{2}\\bmod p\\\\\n11 & \\qquad b\\gets\\lfloor\\dfrac{b}{2}\\rfloor\\\\\n12 & \\textbf{end}\\\\\n13 & \\textbf{return } result\\\\\\\\\n14 & \\textbf{Multiplicative Inverse Solving Algorithm }\\text{getInverse(\\textbf{a},\\textbf{p}):}\\\\\n15 & \\textbf{Parameters. } a,p\\in\\mathbb{N}^+,a\\ne 0,\\gcd(a,p)=1,p\\text{ is a prime}.\\\\\n  & \\text{Denoting the coefficient } a\\text{ and the modulus }p \\text{ in the congruence equation}\\boxed{ax\\equiv 1\\pmod{p} }.\\\\\n16 & \\textbf{Returned value. }\\text{the modular multiplicative inverse of $a$: }\\space a^{-1},\\\\\n & \\text{which is the solution to the congruence equation}\\boxed{ax\\equiv 1\\pmod{p} }.\\\\\n\n17 & \\textbf{Method.}\\\\\n18 & result_{\\operatorname{\\textbf{({new})} } }\\gets\\operatorname{exponentiation}(a,p-2,p)\\bmod{p}\\\\\n& \\textbf{return }result\n\\end{array}\n$$\n\n#### 复杂度\n快速幂求逆元的复杂度就是快速幂的复杂度，即\n\n$$\\text{O}(\\log p)$$\n\n#### 优劣\n##### 优势\n快速幂法求逆元十分容易记忆理解，代码难度小。使用迭代实现快速幂，常数小。\n##### 劣势\n- 局限性：只能用于求模数为质数情况下的逆元，局限性较大。\n\n- 还是只在求单个数逆元时快。\n\n\n------------\n\n### 3.线性迭代法\n为求出$1,2,\\dots,n$这$n$个数中每个数 $a$ 在模 $p$ 意义下的逆元 $a^{-1}$ ，上文两种方法就很慢了，我们需要使用线性方法在$\\text{O}(n) $复杂度内求出每个数的逆元才不会超时。\n#### 过程\n$$\\begin{aligned}\n&\\space \\text{对于正整数 }a\\ (1\\leq a\\leq n),\\text{有}\\\\\n&\\space p=a\\lfloor\\frac{p}{a}\\rfloor+p\\bmod a\\\\\n\\because&\\space p\\equiv 0\\pmod{p}\\\\\n\\therefore&\\space a\\lfloor\\frac{p}{a}\\rfloor+p\\bmod a\\equiv 0\\pmod{p}\\\\\n&\\space \\text{将同余式两边同时乘以 }a^{-1}(p\\bmod a)^{-1}\\text{得到}\\\\\n&\\space \\lfloor\\frac{p}{a}\\rfloor\\left(p\\bmod a\\right)^{-1}+a^{-1}\\equiv 0\\pmod{p}\\\\\n\\therefore&\\space a^{-1}\\equiv - \\lfloor\\frac{p}{a}\\rfloor\\left(p\\bmod a\\right)^{-1}\\pmod{p}\\\\\n\\because&\\space \\text{显然 }1^{-1}\\equiv 1\\pmod p,\\text{且 }p\\bmod a< a\\\\\n&\\space \\text{也就是说，正向递推求解$a^{-1}$是可行的.}\\\\\n\\therefore&\\space \\text{可得出从$a=1$开始，$a^{-1}$的递推式}:\\\\\n&\\space a^{-1}\\equiv\\begin{cases}\n1&\\text{if }a=1,\\\\\n-\\lfloor\\dfrac{p}{a}\\rfloor\\left(p\\bmod a\\right)^{-1}&\\text{otherwise.}\n\\end{cases}\n\\end{aligned}$$\n这样我们在已经迭代求出所有$i^{-1}(i<a)$的情况下就可以求出$a^{-1}$的值了。\n\n$(\\textbf{!})$但是，有一点需要注意：由于 C++ 取模运算的特殊性，被**负数**取模得到的值**还是负数**，这是我们绝对不想看到的，所以我们在具体代码实现时，需要将 $-\\lfloor\\dfrac{p}{a}\\rfloor$ 改写为 $\\left(p-\\lfloor\\dfrac{p}{a}\\rfloor\\right)$ 来实现等价而不会出现负数的操作。\n#### 实现\n以下是线性递推迭代求解逆元方法的伪代码\n$$\n\\begin{array}{ll}\n & \\textbf{Linear Modular Multiplicative Inverse Solving Algorithm }\\operatorname{getInverses}(\\textbf{n},\\textbf{p}):\\\\\n1 & \\textbf{Parameters. } n,p\\in\\mathbb{N}^+,p\\text{ is a prime}.\\\\\n & \\text{Denoting the number of factors $n$ ,the modulus $b$}\\\\\n2 & \\textbf{Returned value. } \\text{An array that holds the inverse of each a}.\\\\\n3 & \\textbf{Method.}\\\\\n4 & {inv}_{\\operatorname{\\textbf{(new)} }1}=1\\\\\n & \\mathtt{Note:}\\ {inv}_{i}=i^{-1}\\texttt{,which denotes the inverse of }i.\\\\\n5 & \\textbf{for }i_{\\operatorname{\\textbf{(new)} } }\\textbf{ from }2\\textbf{ to }n\\textbf{ do}\\\\\n6 & \\qquad {inv}_i\\gets\\left(p-\\lfloor\\dfrac{p}{i}\\rfloor\\right)\\cdot{inv}_{(p\\bmod i)}\\bmod p\\\\\n7 & \\textbf{end}\\\\\n8 & \\textbf{return }inv\n\\end{array}\n$$\n#### 复杂度\n\n显然为\n$$\\operatorname{O}(n)$$\n\n#### 优劣\n##### 优势\n在要求序列$1,2,\\ldots,n$里每个数的乘法逆元时，扩欧法和快速幂法都需要$\\operatorname{O}(n\\log p)$的复杂度来解决，此时$\\operatorname{O}(n)$的线性算法就占很大优势。另外线性递推算法在数据范围小且模数确定时还可以用于打表，贴到代码上$\\operatorname{O}(1)$就行了，嘻嘻。\n##### 劣势\n- 局限性：仅当模数为质数时，线性递推法才可用\n> 证明：感性理解一下，由于仅当 $\\gcd(a,p)=1$ 时线性同余方程\n> $ax\\equiv1\\pmod{p}$ 才有解，$a^{-1}$才存在，那么当 $p$ 不为质数时，\n> 要使线性递推法可用，$1,2,\\ldots,n$ 每个数都必须与 $p$ 互质，这怎么可能呢？\n- 仅在求$1,2,\\ldots,n$的逆元时才占优势，偏要将递推式转为递归求解单个数逆元已知的复杂度上界仅为$\\operatorname{O(\\sqrt[3]{n})}$，更优的算法有扩欧法和快速幂法。\n\n\n------------\n\n### 4.阶乘逆推法\n同样是求$1,2,\\dots,n$这$n$个数中每个数 $a$ 在模 $p$ 意义下的逆元 $a^{-1}$，有没有一种更易于理解的方法呢？答案是肯定的。我们只需要利用逆元与原数相乘抵消成单位元的性质，即可利用阶乘求解。\n#### 过程\n$$\\begin{aligned}\n\\text{显然}&\\space{i!}^{-1}={(i+1)!}^{-1}\\times(i+1),&(1)\\\\\n&\\space i^{-1}=\\frac{(i-1)!}{i!}=(i-1)!\\cdot {i!}^{-1}&(2) \n\\end{aligned}$$\n所以对于$1,2,\\dots,n$，我们先处理出$1$至$n$的阶乘(模 $p$ 意义下)，然后只需要跑一遍 扩展欧几里得 或 快速幂($p$为质数) 求出 $n!^{-1}$，然后依据$(1)$逆推就能依次求出$(n-1)!^{-1},(n-2)!^{-1},\\ldots,2!^{-1},1!^{-1}$的值，同时在迭代求出$i!^{-1}$后，由于$i!,(i-1)!$已经被预处理出来了，即可用$(2)$求出$i^{-1}$.\n#### 实现\n以下是阶乘逆推法求逆元的伪代码\n$$\n\\begin{array}{ll}\n & \\textbf{Factorial Modular Multiplicative Inverse Solving Algorithm }\\operatorname{getInverses}(\\textbf{n},\\textbf{p}):\\\\\n1 & \\textbf{Parameters. } n,p\\in\\mathbb{N}^+,p\\text{ is a prime}.\\\\\n & \\text{Denoting the number of factors $n$ and the modulus $p$}\\\\\n2 & \\textbf{Returned value. } \\text{An array that holds the inverse of each }a\\in\\mathbb{N^+}\\cap[1,n].\\\\\n3 & \\textbf{Method.}\\\\\n4 & {fac}_{\\operatorname{(new)}0}\\gets 1\\\\\n5 & {fac}_{1}\\gets 1\\\\\n & \\mathtt{Note:}\\ {fac}_{i}=i!\\texttt{,which denotes the factorial of }i.\\\\\n6 & \\textbf{for }i_{\\operatorname{\\textbf{(new)} } }\\textbf{ from }2\\textbf{ to }n\\textbf{ do}\\\\\n8 & \\qquad fac_i\\gets fac_{i-1}\\times i\\bmod p\\\\\n9 & \\textbf{end}\\\\\n9 & G_{\\operatorname{(new)} }\\gets\\operatorname{exgcd}(fac_{n},p,x_{\\operatorname{(new)} },y_{\\operatorname{(new)} })\\\\\n10 & {invfac}_{\\operatorname{(new)}n}\\gets(x\\bmod p+p)\\bmod p\\\\\n{(\\mathbf{i})} &\\overline{\\texttt{It's equivalent to the code below.} }\\\\\n\\mathit{10} & \\underline{invfac_{\\operatorname{(new)}n}\\gets fac_n^{p-2}\\bmod p\\hspace{1.3cm} }\\\\\n & \\mathtt{Note:}\\ {invfac}_{i}=i!^{-1}\\texttt{,which denotes the inverse of the factorial of }i.\\\\\n11 & inv_{\\operatorname{(new)}n}\\gets invfac_{n}\\times fac_{n-1}\\bmod p\\\\\n & \\mathtt{Note:}\\ {inv}_{i}=i^{-1}\\texttt{,which denotes the inverse of }i.\\\\\n12 & \\textbf{for } i_{\\operatorname{(new)} }\\textbf{ from }n-1\\textbf{ to } 1\\textbf{ do}\\\\\n13 & \\qquad invfac_i\\gets {invfac}_{i+1}(i+1)\\bmod p\\\\\n14 & \\qquad inv_i\\gets {invfac}_{i}\\times {fac}_{i-1}\\bmod p\\\\\n15 & \\textbf{end}\\\\\n16 & \\textbf{return }inv\n\\end{array}\n$$\n\n#### 复杂度\n\n求 $n!^{-1}$ 的复杂度是$\\operatorname{O}(\\log p)$,求 $n!$ 与迭代逆推的复杂度均为$\\operatorname{O}(n)$，所以总复杂度是\n$$\\operatorname{O}(n+\\log p)$$\n\n#### 优劣\n\n同线性迭代法.\n\n\n------------\n\n\n### 5.前缀积逆推-求任意n个数逆元\n首先我们注意到，使用阶乘逆推法时，由于是从 $n$ 开始逆推，并不依赖从 $1$ 开始到 $n$ 的条件。其次，我们使用阶乘只是为了利用逆元与原数相消的性质，完全可以把阶乘 $i!$ 看成是$1,2,\\ldots,i$的前缀积，那么我们就可以用前缀积的方式，将阶乘法推广，来求任意 $n$ 个数 $a_1,a_2,\\ldots,a_n$ 各自的逆元.\n\n#### 过程\n$$\\begin{aligned}\n\\text{显然}&\\space{\\left({\\prod_{k=1}^i{a_k} }\\right)}^{-1}={ {\\left({\\prod_{k=1}^{i+1}a_k}\\right)}^{-1} }\\times a_{i+1},&(1)\\\\\n&\\space a_i^{-1}=\\frac{\\prod_{k=1}^{i-1}a_k}{\\prod_{k=1}^ia_k}=\\left(\\prod_{k=1}^{i-1}a_k\\right)\\left({\\prod_{k=1}^{i}a_k}\\right)^{-1}&(2) \n\\end{aligned}$$\n只需据$(1)(2)$逆推即可。我们把求积改为前缀积实现，即可大大优化算法。\n\n#### 实现\n\n以下是前缀积逆推的伪代码\n\n$$\n\\begin{array}{ll}\n & \\textbf{Prefix product Modular Multiplicative Inverse Solving Algorithm }\\operatorname{getInverses}(\\textbf{n},\\textbf{p},\\mathbf{ {^*}a}):\\\\\n\n\n1 & \\textbf{Parameters. } n,p\\in\\mathbb{N}^+,p\\text{ is a {prime} },\\text{$a$ is a \\textbf{pointer} to the address of the first element of \\textbf{an array of $n$ factors} }.\\\\\n\n\n & \\text{Denoting the number of factors $n$ ,the modulus $p$ and the sequence $a$.}\\\\\n \n \n2 & \\textbf{Returned value. } \\text{An array that holds the inverse of each }a_i.\\\\\n3 & \\textbf{Method.}\\\\\n4 & {prod}_{\\operatorname{(new)}0}\\gets 1\\\\\n & \\mathtt{Note:}\\ prod_i={\\prod_{k=1}^ia_k}\\texttt{,which denotes the }i^{\\operatorname{th} } \\texttt{ prefix product in } a.\\\\\n5 & \\textbf{for }i_{\\operatorname{\\textbf{(new)} } }\\textbf{ from }1\\textbf{ to }n\\textbf{ do}\\\\\n6 & \\qquad prod_i\\gets prod_{i-1}\\times a_i\\bmod p\\\\\n7 & \\textbf{end}\\\\\n8 & G_{\\operatorname{(new)} }\\gets\\operatorname{exgcd}(prod_{n},p,x_{\\operatorname{(new)} },y_{\\operatorname{(new)} })\\\\\n9 & {invprod}_{\\operatorname{(new)}n}\\gets(x\\bmod p+p)\\bmod p\\\\\n{(\\mathbf{i})} &\\overline{\\texttt{It's equivalent to the code below.} }\\\\\n\\mathit9 & \\underline{invprod_{\\operatorname{(new)}n}\\gets prod_n^{p-2}\\bmod p\\hspace{1.3cm} }\\\\\n & \\mathtt{Note:}\\ {invprod}_{i}={\\left(\\prod_{k=1}^ia_k\\right)}^{-1}\\texttt{,which denotes the inverse of the prefix product of }a_i.\\\\\n10 & inv_{\\operatorname{(new)}n}\\gets invprod_{n}\\times prod_{n-1}\\bmod p\\\\\n & \\mathtt{Note:}\\ {inv}_{i}=a_i^{-1}\\texttt{,which denotes the inverse of }a_i.\\\\\n11 & \\textbf{for } i_{\\operatorname{(new)} }\\textbf{ from }n-1\\textbf{ to } 1\\textbf{ do}\\\\\n12 & \\qquad invprod_i\\gets {invprod}_{i+1}\\cdot a_{i+1}\\bmod p\\\\\n13 & \\qquad inv_i\\gets {invprod}_{i}\\times {prod}_{i-1}\\bmod p\\\\\n14 & \\textbf{end}\\\\\n15 & \\textbf{return }inv\n\\end{array}\n$$\n\n\n#### 复杂度\n\n类似阶乘法，为\n$$\\operatorname{O}(n+\\log p)$$\n\n#### 优劣\n##### 优势\n前缀积逆推法能够求解任意 $n$ 个数的逆元，更加灵活。\n\n##### 劣势\n- 局限性：仅能模数为素数。\n- 需要用到单个数求逆元。","slug":"乘法逆元","published":1,"updated":"2023-11-03T04:25:06.628Z","_id":"clohfofq40000r4s48rbmh4yt","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"乘法逆元\">乘法逆元</h1>\r\n<h2 id=\"定义\">定义</h2>\r\n<p>数 <span class=\"math inline\">\\(a\\)</span> 模 <span\r\nclass=\"math inline\">\\(p\\)</span> 意义下的<strong>乘法逆元</strong>(<span\r\nclass=\"math inline\">\\(\\texttt{Modular Multiplicative\r\nInverse}\\)</span>)被定义为 <em>线性同余方程</em> <span\r\nclass=\"math inline\">\\(ax\\equiv 1 \\pmod p\\)</span>的解。</p>\r\n<h2 id=\"条件\">条件</h2>\r\n<span class=\"math inline\">\\(\\gcd(a,p)=1\\)</span>是数 <span\r\nclass=\"math inline\">\\(a\\)</span> 在模 <span\r\nclass=\"math inline\">\\(p\\)</span> 意义下存在乘法逆元的充分必要条件。 ##\r\n求法 ### 1.扩展欧几里得法\r\n既然乘法逆元是线性同余方程的解，那么使用扩展欧几里得算法<span\r\nclass=\"math inline\">\\((\\texttt{Extended Euclidean algorithm,\r\nEXGCD})\\)</span>求出方程的通解。再经转换即可求出特解。 #### 过程\r\n将同余方程 <span class=\"math inline\">\\(ax\\equiv 1 \\pmod p\\)</span>\r\n改写为如下形式 $$\r\n<span class=\"math display\">\\[\\begin{aligned}\r\nax+py &amp;=1 &amp;(1)\r\n\r\n\\end{aligned}\\]</span>\r\n<p>$$</p>\r\n<p>其中<span\r\nclass=\"math inline\">\\(x,y\\)</span>是未知数。显然，这两个方程是等价的。\r\n&gt; 由裴蜀定理可得，方程<span class=\"math inline\">\\(ax\\equiv b \\pmod\r\np\\)</span> <strong>有整数解</strong>的充分必要条件是 <span\r\nclass=\"math inline\">\\(\\gcd(a,p)\\mid 1\\)</span> ，且容易将其转换为: <span\r\nclass=\"math inline\">\\(\\gcd(a,p)=1\\)</span> &gt; &gt;\r\n也就是说，满足如下条件时，才能使用扩展欧几里得算法求解逆元： &gt; <span\r\nclass=\"math display\">\\[\\gcd(a,p)=1\\]</span> &gt; 即需要 <span\r\nclass=\"math inline\">\\(a,p\\)</span> 互质。</p>\r\n<p>所以我们可将等式<span\r\nclass=\"math inline\">\\((1)\\)</span>再次改写为</p>\r\n<p><span class=\"math display\">\\[ax+py=\\gcd(a,p)\\]</span></p>\r\n<p>这就化为扩欧求解方程的一般形式 <span\r\nclass=\"math inline\">\\(ax+by=\\gcd(a,b)\\)</span>\r\n了。接下来使用扩欧求解即可</p>\r\n<p><span class=\"math display\">\\[\\begin{aligned}\r\n\\text{设}&amp;:\\\\\r\n&amp;ax_{1}+py_{1}=\\gcd(a,p)\\\\\r\n&amp;px_2+(a\\bmod p)y_2=\\gcd(p,a\\bmod p)\\\\\r\n\\because&amp;\\space\\text{由欧几里得定理知}\\ \\gcd(a,p)=\\gcd(p,a\\bmod p)\\\\\r\n\\therefore&amp;\\space ax_{2}+py_{1}=px_2+(a\\bmod p)y_2\\\\\r\n\\because&amp;\\space a\\bmod p=a-\\lfloor\\frac{a}{p}\\rfloor p\\\\\r\n\\therefore&amp;\\space ax_1+py_1=px_2+\\left(a-\\lfloor\\frac{a}{p}\\rfloor\r\np\\right)y_2\\\\\r\n\\therefore\\space\r\n&amp;ax_1+py_1=ay_2+p\\left(x_2-\\lfloor\\frac{a}{p}\\rfloor y_2\\right)\\\\\r\n\\because&amp;\\space a=a,p=p\\\\\r\n\\therefore&amp;\\space \\text{比对法可得}\\\\\r\n&amp;\\begin{cases}\r\nx_1=y_2,\\\\\r\ny_1=x_2-\\lfloor\\frac{a}{p}\\rfloor y_2.\r\n\\end{cases}\r\n\\end{aligned}\\]</span> 由此我们得到了 <span\r\nclass=\"math inline\">\\(x_1,y_1\\)</span> 与 <span\r\nclass=\"math inline\">\\(x_2,y_2\\)</span>之间的关系，又因为它们都与 <span\r\nclass=\"math inline\">\\(\\gcd(a,p)\\)</span> 有关，所以只需要将 <span\r\nclass=\"math inline\">\\(x_2,y_2\\)</span> 在求<span\r\nclass=\"math inline\">\\(\\gcd(a,p)\\)</span>的过程中一并计算，辗转相除直到\r\n<span class=\"math inline\">\\(p_i=0,\\gcd(a_i,p_i)=a_i\\)</span> 时返回<span\r\nclass=\"math inline\">\\(x_2=1,y_2=0\\)</span>\r\n来递归求解即可求出在线性同余方程 <span class=\"math inline\">\\(ax\\equiv 1\r\n\\pmod p\\)</span> 中 <span class=\"math inline\">\\(x\\)</span> 的通解。</p>\r\n<p>求出<strong>通解</strong> <span class=\"math inline\">\\(x_0\\)</span>\r\n后，一个<strong>特解</strong>(<em>最小正整数解</em> )即为</p>\r\n<p><span class=\"math display\">\\[\\begin{aligned}\r\nx&amp;=\\left(x_0\\bmod\r\n\\frac{p}{\\gcd(a,p)}+\\frac{p}{\\gcd(a,p)}\\right)\\bmod\r\n\\frac{p}{\\gcd(a,p)}\\\\\r\n&amp;=\\left(x_0\\bmod \\frac{p}{1}+\\frac{p}{1}\\right)\\bmod \\frac{p}{1}\\\\\r\n&amp;=\\left(x_0\\bmod p+p\\right)\\bmod p.\r\n\\end{aligned}\\]</span></p>\r\n<p><span class=\"math inline\">\\(a\\)</span> 在模 <span\r\nclass=\"math inline\">\\(p\\)</span> 意义下的乘法逆元即为 <span\r\nclass=\"math inline\">\\(x\\)</span> 的值。 #### 实现\r\n以下是扩展欧几里得算法的伪代码</p>\r\n$$\r\n<span class=\"math display\">\\[\\begin{array}{ll}\r\n&amp;\\textbf{Extended Euclidean algorithm\r\n}\\operatorname{exgcd}(\\mathbf{a}, \\mathbf{b}, ⇒{\\mathbf{x} },\r\n⇒\\mathbf{y})\\text{:} \\\\\r\n1 &amp;  \\textbf{Parameters. } a,b\\in\\mathbb{Z}^+,b\\ne0.\\space x \\text{\r\nand } y \\text{ are bit references}.\\\\\r\n  &amp;  \\text{Denoting the }a,b,x\\text{ and }y\\text{ in the equation }\r\n\\boxed{ax+by=\\operatorname{gcd}(a,b)}. \\\\\r\n  &amp;\\text{Initialize } x\\gets\\varnothing,y\\gets\\varnothing\\\\\r\n2 &amp;  \\textbf{Return value. } \\text{The GCD between }a\\text{ and\r\n}b.\\\\\r\n  &amp;  \\textbf{Accompanying results }x\\text{ and }y \\text{ is the\r\nsolution to the equation}.\\\\\r\n3 &amp;  \\textbf{Method. } \\\\\r\n4 &amp;  \\textbf{if }b=0 \\\\\r\n5 &amp;  \\qquad x\\gets1 \\\\\r\n6 &amp;  \\qquad y\\gets0\\\\\r\n7 &amp;  \\qquad \\textbf{return }\\ a \\\\\r\n8 &amp;  {result}_{ {\\operatorname{\\textbf{(new)} } }\r\n}\\gets\\operatorname{exgcd}\\left(b,a\\bmod b,x,y\\right) \\\\\r\n&amp;  (\\texttt{At this point the values of }x\\texttt{ and }y\\texttt{\r\nhave changed}.)\\\\\r\n9 &amp;  x_{2{\\operatorname{\\textbf{(new)} } } }\\gets x\\\\\r\n11 &amp; y_{2{\\operatorname{\\textbf{(new)} } } }\\gets y\\\\\r\n12 &amp;  x\\gets y_2\\\\\r\n13 &amp; y\\gets x_2-\\lfloor\\dfrac{a}{b}\\rfloor y_2\\\\\r\n14 &amp;  \\textbf{return }\\ result\\\\\r\n\r\n\\end{array}\\]</span>\r\n<p>$$</p>\r\n<h4 id=\"复杂度\">复杂度</h4>\r\n<p>扩展欧几里得算法的时间复杂度与欧几里得算法（辗转相除法）无异，均为</p>\r\n<p><span class=\"math display\">\\[\\text{O}(\\log p) \\]</span></p>\r\n<h4 id=\"优劣\">优劣</h4>\r\n<h5 id=\"优势\">优势</h5>\r\n<p>扩展欧几里得法求解乘法逆元只需满足 <span\r\nclass=\"math inline\">\\(\\gcd(a,p)=1,\\)</span>\r\n即原数与模数互质即可，而后文提到其他算法均，需另外要求 <span\r\nclass=\"math inline\">\\(p\\)</span> 为质数，即模数要为质数。 ###### 劣势 -\r\n扩展欧几里得法求解乘法逆元的过程较为复杂，记忆较困难。</p>\r\n<ul>\r\n<li><p>速度：大多使用递归实现辗转相除法，比其他迭代实现的算法常数要高一些，跑得慢。</p></li>\r\n<li><p>在求多个数逆元时必须多次运算，复杂度高，所以一般只能用于求出单个数的逆元。</p></li>\r\n</ul>\r\n<hr />\r\n<h3 id=\"快速幂法\">2.快速幂法</h3>\r\n<p>当 <span class=\"math inline\">\\(\\gcd(a,p)=1,\\)</span><strong><span\r\nclass=\"math inline\">\\(\\boldsymbol{p}\\)</span>为质数</strong>\r\n时,借助费马小定理<span class=\"math inline\">\\((\\texttt{Fermat&#39;s\r\nLittle Theorem})\\)</span>可转化同余方程 <span\r\nclass=\"math inline\">\\(ax\\equiv 1 \\pmod p\\)</span>，得其通解 <span\r\nclass=\"math inline\">\\(x_0=a^{p-2}\\)</span> #### 过程 <span\r\nclass=\"math display\">\\[\\begin{aligned}\r\n\\because&amp;\\space\\text{当 } p\\text{ 为质数时}:\\\\\r\n&amp;\\space a^{p-1}\\equiv1{\\pmod p}\\text{ (费马小定理)}\\\\\r\n\\text{又}&amp;\\space ax\\equiv 1 \\pmod p\\\\\r\n\\therefore&amp;\\space ax\\equiv a^{p-1}\\pmod{p}\\\\\r\n\\because&amp;\\space \\gcd(a,p)=1\\\\\r\n\\therefore&amp;\\space x\\equiv a^{p-2}\\pmod{p}\r\n\\end{aligned}\\]</span> 然后即可用快速幂求出 <span\r\nclass=\"math inline\">\\(a^{p-2}\\)</span> 的值，即求出一个通解 <span\r\nclass=\"math inline\">\\(x_0\\)</span> 了</p>\r\n<p>在大部分情况下<span class=\"math inline\">\\(,a&gt;0,\\)</span> 所以此时\r\n<span class=\"math inline\">\\(a^{p-2}&gt;0\\)</span>\r\n，求不求特解都无所谓了。</p>\r\n<h4 id=\"实现\">实现</h4>\r\n以下是快速幂法求解逆元的伪代码 $$\r\n<span class=\"math display\">\\[\\begin{array}{ll}\r\n&amp;\\overline{\\underline{\\textbf{Modular Multiplicative Inverse Solving\r\nAlgorithm by Exponentiation} } }\\\\\r\n1 &amp; \\textbf{Fast Power Algorithm }\r\n\\operatorname{exponentiation}(\\mathbf{a},\\mathbf{b},\\mathbf{p})\\text{:}\\\\\r\n2 &amp; \\textbf{Parameters. } a,b,p\\in\\mathbb{N}^+.\\\\\r\n  &amp; \\text{Denoting the base } a,\\text{the exponent }b\\text{ and the\r\nmodulus }p.\\\\\r\n3 &amp; \\textbf{Returned value. }\\text{the value of }\\boxed{a^b\\bmod{p}\r\n}\\\\\r\n4 &amp; \\textbf{Method.}\\\\\r\n5 &amp; {base}_{\\operatorname{\\textbf{(new)} } }\\gets a\\\\\r\n6 &amp; result_{\\operatorname{\\textbf{(new)} } }\\gets 1\\\\\r\n7 &amp; \\textbf{while}\\space b&gt;0\\space\\textbf{do}\\\\\r\n8 &amp; \\qquad \\textbf{if }2\\nmid b\\textbf{ then}\\\\\r\n9 &amp; \\qquad \\qquad result\\gets result\\cdot base\\bmod{p}\\\\\r\n10 &amp; \\qquad base\\gets {base}^{2}\\bmod p\\\\\r\n11 &amp; \\qquad b\\gets\\lfloor\\dfrac{b}{2}\\rfloor\\\\\r\n12 &amp; \\textbf{end}\\\\\r\n13 &amp; \\textbf{return } result\\\\\\\\\r\n14 &amp; \\textbf{Multiplicative Inverse Solving Algorithm\r\n}\\text{getInverse(\\textbf{a},\\textbf{p}):}\\\\\r\n15 &amp; \\textbf{Parameters. } a,p\\in\\mathbb{N}^+,a\\ne\r\n0,\\gcd(a,p)=1,p\\text{ is a prime}.\\\\\r\n  &amp; \\text{Denoting the coefficient } a\\text{ and the modulus }p\r\n\\text{ in the congruence equation}\\boxed{ax\\equiv 1\\pmod{p} }.\\\\\r\n16 &amp; \\textbf{Returned value. }\\text{the modular multiplicative\r\ninverse of $a$: }\\space a^{-1},\\\\\r\n&amp; \\text{which is the solution to the congruence\r\nequation}\\boxed{ax\\equiv 1\\pmod{p} }.\\\\\r\n\r\n17 &amp; \\textbf{Method.}\\\\\r\n18 &amp; result_{\\operatorname{\\textbf{({new})} }\r\n}\\gets\\operatorname{exponentiation}(a,p-2,p)\\bmod{p}\\\\\r\n&amp; \\textbf{return }result\r\n\\end{array}\\]</span>\r\n<p>$$</p>\r\n<h4 id=\"复杂度-1\">复杂度</h4>\r\n<p>快速幂求逆元的复杂度就是快速幂的复杂度，即</p>\r\n<p><span class=\"math display\">\\[\\text{O}(\\log p)\\]</span></p>\r\n<h4 id=\"优劣-1\">优劣</h4>\r\n<h5 id=\"优势-1\">优势</h5>\r\n<p>快速幂法求逆元十分容易记忆理解，代码难度小。使用迭代实现快速幂，常数小。\r\n##### 劣势 - 局限性：只能用于求模数为质数情况下的逆元，局限性较大。</p>\r\n<ul>\r\n<li>还是只在求单个数逆元时快。</li>\r\n</ul>\r\n<hr />\r\n<h3 id=\"线性迭代法\">3.线性迭代法</h3>\r\n<p>为求出<span class=\"math inline\">\\(1,2,\\dots,n\\)</span>这<span\r\nclass=\"math inline\">\\(n\\)</span>个数中每个数 <span\r\nclass=\"math inline\">\\(a\\)</span> 在模 <span\r\nclass=\"math inline\">\\(p\\)</span> 意义下的逆元 <span\r\nclass=\"math inline\">\\(a^{-1}\\)</span>\r\n，上文两种方法就很慢了，我们需要使用线性方法在$(n)\r\n$复杂度内求出每个数的逆元才不会超时。 #### 过程 <span\r\nclass=\"math display\">\\[\\begin{aligned}\r\n&amp;\\space \\text{对于正整数 }a\\ (1\\leq a\\leq n),\\text{有}\\\\\r\n&amp;\\space p=a\\lfloor\\frac{p}{a}\\rfloor+p\\bmod a\\\\\r\n\\because&amp;\\space p\\equiv 0\\pmod{p}\\\\\r\n\\therefore&amp;\\space a\\lfloor\\frac{p}{a}\\rfloor+p\\bmod a\\equiv\r\n0\\pmod{p}\\\\\r\n&amp;\\space \\text{将同余式两边同时乘以 }a^{-1}(p\\bmod\r\na)^{-1}\\text{得到}\\\\\r\n&amp;\\space \\lfloor\\frac{p}{a}\\rfloor\\left(p\\bmod\r\na\\right)^{-1}+a^{-1}\\equiv 0\\pmod{p}\\\\\r\n\\therefore&amp;\\space a^{-1}\\equiv -\r\n\\lfloor\\frac{p}{a}\\rfloor\\left(p\\bmod a\\right)^{-1}\\pmod{p}\\\\\r\n\\because&amp;\\space \\text{显然 }1^{-1}\\equiv 1\\pmod p,\\text{且 }p\\bmod\r\na&lt; a\\\\\r\n&amp;\\space \\text{也就是说，正向递推求解$a^{-1}$是可行的.}\\\\\r\n\\therefore&amp;\\space \\text{可得出从$a=1$开始，$a^{-1}$的递推式}:\\\\\r\n&amp;\\space a^{-1}\\equiv\\begin{cases}\r\n1&amp;\\text{if }a=1,\\\\\r\n-\\lfloor\\dfrac{p}{a}\\rfloor\\left(p\\bmod\r\na\\right)^{-1}&amp;\\text{otherwise.}\r\n\\end{cases}\r\n\\end{aligned}\\]</span> 这样我们在已经迭代求出所有<span\r\nclass=\"math inline\">\\(i^{-1}(i&lt;a)\\)</span>的情况下就可以求出<span\r\nclass=\"math inline\">\\(a^{-1}\\)</span>的值了。</p>\r\n<p><span\r\nclass=\"math inline\">\\((\\textbf{!})\\)</span>但是，有一点需要注意：由于\r\nC++\r\n取模运算的特殊性，被<strong>负数</strong>取模得到的值<strong>还是负数</strong>，这是我们绝对不想看到的，所以我们在具体代码实现时，需要将\r\n<span class=\"math inline\">\\(-\\lfloor\\dfrac{p}{a}\\rfloor\\)</span> 改写为\r\n<span\r\nclass=\"math inline\">\\(\\left(p-\\lfloor\\dfrac{p}{a}\\rfloor\\right)\\)</span>\r\n来实现等价而不会出现负数的操作。 #### 实现\r\n以下是线性递推迭代求解逆元方法的伪代码 <span class=\"math display\">\\[\r\n\\begin{array}{ll}\r\n&amp; \\textbf{Linear Modular Multiplicative Inverse Solving Algorithm\r\n}\\operatorname{getInverses}(\\textbf{n},\\textbf{p}):\\\\\r\n1 &amp; \\textbf{Parameters. } n,p\\in\\mathbb{N}^+,p\\text{ is a prime}.\\\\\r\n&amp; \\text{Denoting the number of factors $n$ ,the modulus $b$}\\\\\r\n2 &amp; \\textbf{Returned value. } \\text{An array that holds the inverse\r\nof each a}.\\\\\r\n3 &amp; \\textbf{Method.}\\\\\r\n4 &amp; {inv}_{\\operatorname{\\textbf{(new)} }1}=1\\\\\r\n&amp; \\mathtt{Note:}\\ {inv}_{i}=i^{-1}\\texttt{,which denotes the inverse\r\nof }i.\\\\\r\n5 &amp; \\textbf{for }i_{\\operatorname{\\textbf{(new)} } }\\textbf{ from\r\n}2\\textbf{ to }n\\textbf{ do}\\\\\r\n6 &amp; \\qquad\r\n{inv}_i\\gets\\left(p-\\lfloor\\dfrac{p}{i}\\rfloor\\right)\\cdot{inv}_{(p\\bmod\r\ni)}\\bmod p\\\\\r\n7 &amp; \\textbf{end}\\\\\r\n8 &amp; \\textbf{return }inv\r\n\\end{array}\r\n\\]</span> #### 复杂度</p>\r\n<p>显然为 <span class=\"math display\">\\[\\operatorname{O}(n)\\]</span></p>\r\n<h4 id=\"优劣-2\">优劣</h4>\r\n<h5 id=\"优势-2\">优势</h5>\r\n<p>在要求序列<span\r\nclass=\"math inline\">\\(1,2,\\ldots,n\\)</span>里每个数的乘法逆元时，扩欧法和快速幂法都需要<span\r\nclass=\"math inline\">\\(\\operatorname{O}(n\\log\r\np)\\)</span>的复杂度来解决，此时<span\r\nclass=\"math inline\">\\(\\operatorname{O}(n)\\)</span>的线性算法就占很大优势。另外线性递推算法在数据范围小且模数确定时还可以用于打表，贴到代码上<span\r\nclass=\"math inline\">\\(\\operatorname{O}(1)\\)</span>就行了，嘻嘻。 #####\r\n劣势 - 局限性：仅当模数为质数时，线性递推法才可用 &gt;\r\n证明：感性理解一下，由于仅当 <span\r\nclass=\"math inline\">\\(\\gcd(a,p)=1\\)</span> 时线性同余方程 &gt; <span\r\nclass=\"math inline\">\\(ax\\equiv1\\pmod{p}\\)</span> 才有解，<span\r\nclass=\"math inline\">\\(a^{-1}\\)</span>才存在，那么当 <span\r\nclass=\"math inline\">\\(p\\)</span> 不为质数时， &gt;\r\n要使线性递推法可用，<span class=\"math inline\">\\(1,2,\\ldots,n\\)</span>\r\n每个数都必须与 <span class=\"math inline\">\\(p\\)</span>\r\n互质，这怎么可能呢？ - 仅在求<span\r\nclass=\"math inline\">\\(1,2,\\ldots,n\\)</span>的逆元时才占优势，偏要将递推式转为递归求解单个数逆元已知的复杂度上界仅为<span\r\nclass=\"math inline\">\\(\\operatorname{O(\\sqrt[3]{n})}\\)</span>，更优的算法有扩欧法和快速幂法。</p>\r\n<hr />\r\n<h3 id=\"阶乘逆推法\">4.阶乘逆推法</h3>\r\n<p>同样是求<span class=\"math inline\">\\(1,2,\\dots,n\\)</span>这<span\r\nclass=\"math inline\">\\(n\\)</span>个数中每个数 <span\r\nclass=\"math inline\">\\(a\\)</span> 在模 <span\r\nclass=\"math inline\">\\(p\\)</span> 意义下的逆元 <span\r\nclass=\"math inline\">\\(a^{-1}\\)</span>，有没有一种更易于理解的方法呢？答案是肯定的。我们只需要利用逆元与原数相乘抵消成单位元的性质，即可利用阶乘求解。\r\n#### 过程 <span class=\"math display\">\\[\\begin{aligned}\r\n\\text{显然}&amp;\\space{i!}^{-1}={(i+1)!}^{-1}\\times(i+1),&amp;(1)\\\\\r\n&amp;\\space i^{-1}=\\frac{(i-1)!}{i!}=(i-1)!\\cdot {i!}^{-1}&amp;(2)\r\n\\end{aligned}\\]</span> 所以对于<span\r\nclass=\"math inline\">\\(1,2,\\dots,n\\)</span>，我们先处理出<span\r\nclass=\"math inline\">\\(1\\)</span>至<span\r\nclass=\"math inline\">\\(n\\)</span>的阶乘(模 <span\r\nclass=\"math inline\">\\(p\\)</span> 意义下)，然后只需要跑一遍 扩展欧几里得\r\n或 快速幂(<span class=\"math inline\">\\(p\\)</span>为质数) 求出 <span\r\nclass=\"math inline\">\\(n!^{-1}\\)</span>，然后依据<span\r\nclass=\"math inline\">\\((1)\\)</span>逆推就能依次求出<span\r\nclass=\"math inline\">\\((n-1)!^{-1},(n-2)!^{-1},\\ldots,2!^{-1},1!^{-1}\\)</span>的值，同时在迭代求出<span\r\nclass=\"math inline\">\\(i!^{-1}\\)</span>后，由于<span\r\nclass=\"math inline\">\\(i!,(i-1)!\\)</span>已经被预处理出来了，即可用<span\r\nclass=\"math inline\">\\((2)\\)</span>求出<span\r\nclass=\"math inline\">\\(i^{-1}\\)</span>. #### 实现\r\n以下是阶乘逆推法求逆元的伪代码 <span class=\"math display\">\\[\r\n\\begin{array}{ll}\r\n&amp; \\textbf{Factorial Modular Multiplicative Inverse Solving Algorithm\r\n}\\operatorname{getInverses}(\\textbf{n},\\textbf{p}):\\\\\r\n1 &amp; \\textbf{Parameters. } n,p\\in\\mathbb{N}^+,p\\text{ is a prime}.\\\\\r\n&amp; \\text{Denoting the number of factors $n$ and the modulus $p$}\\\\\r\n2 &amp; \\textbf{Returned value. } \\text{An array that holds the inverse\r\nof each }a\\in\\mathbb{N^+}\\cap[1,n].\\\\\r\n3 &amp; \\textbf{Method.}\\\\\r\n4 &amp; {fac}_{\\operatorname{(new)}0}\\gets 1\\\\\r\n5 &amp; {fac}_{1}\\gets 1\\\\\r\n&amp; \\mathtt{Note:}\\ {fac}_{i}=i!\\texttt{,which denotes the factorial\r\nof }i.\\\\\r\n6 &amp; \\textbf{for }i_{\\operatorname{\\textbf{(new)} } }\\textbf{ from\r\n}2\\textbf{ to }n\\textbf{ do}\\\\\r\n8 &amp; \\qquad fac_i\\gets fac_{i-1}\\times i\\bmod p\\\\\r\n9 &amp; \\textbf{end}\\\\\r\n9 &amp; G_{\\operatorname{(new)}\r\n}\\gets\\operatorname{exgcd}(fac_{n},p,x_{\\operatorname{(new)}\r\n},y_{\\operatorname{(new)} })\\\\\r\n10 &amp; {invfac}_{\\operatorname{(new)}n}\\gets(x\\bmod p+p)\\bmod p\\\\\r\n{(\\mathbf{i})} &amp;\\overline{\\texttt{It&#39;s equivalent to the code\r\nbelow.} }\\\\\r\n\\mathit{10} &amp; \\underline{invfac_{\\operatorname{(new)}n}\\gets\r\nfac_n^{p-2}\\bmod p\\hspace{1.3cm} }\\\\\r\n&amp; \\mathtt{Note:}\\ {invfac}_{i}=i!^{-1}\\texttt{,which denotes the\r\ninverse of the factorial of }i.\\\\\r\n11 &amp; inv_{\\operatorname{(new)}n}\\gets invfac_{n}\\times\r\nfac_{n-1}\\bmod p\\\\\r\n&amp; \\mathtt{Note:}\\ {inv}_{i}=i^{-1}\\texttt{,which denotes the inverse\r\nof }i.\\\\\r\n12 &amp; \\textbf{for } i_{\\operatorname{(new)} }\\textbf{ from\r\n}n-1\\textbf{ to } 1\\textbf{ do}\\\\\r\n13 &amp; \\qquad invfac_i\\gets {invfac}_{i+1}(i+1)\\bmod p\\\\\r\n14 &amp; \\qquad inv_i\\gets {invfac}_{i}\\times {fac}_{i-1}\\bmod p\\\\\r\n15 &amp; \\textbf{end}\\\\\r\n16 &amp; \\textbf{return }inv\r\n\\end{array}\r\n\\]</span></p>\r\n<h4 id=\"复杂度-2\">复杂度</h4>\r\n<p>求 <span class=\"math inline\">\\(n!^{-1}\\)</span> 的复杂度是<span\r\nclass=\"math inline\">\\(\\operatorname{O}(\\log p)\\)</span>,求 <span\r\nclass=\"math inline\">\\(n!\\)</span> 与迭代逆推的复杂度均为<span\r\nclass=\"math inline\">\\(\\operatorname{O}(n)\\)</span>，所以总复杂度是 <span\r\nclass=\"math display\">\\[\\operatorname{O}(n+\\log p)\\]</span></p>\r\n<h4 id=\"优劣-3\">优劣</h4>\r\n<p>同线性迭代法.</p>\r\n<hr />\r\n<h3 id=\"前缀积逆推-求任意n个数逆元\">5.前缀积逆推-求任意n个数逆元</h3>\r\n<p>首先我们注意到，使用阶乘逆推法时，由于是从 <span\r\nclass=\"math inline\">\\(n\\)</span> 开始逆推，并不依赖从 <span\r\nclass=\"math inline\">\\(1\\)</span> 开始到 <span\r\nclass=\"math inline\">\\(n\\)</span>\r\n的条件。其次，我们使用阶乘只是为了利用逆元与原数相消的性质，完全可以把阶乘\r\n<span class=\"math inline\">\\(i!\\)</span> 看成是<span\r\nclass=\"math inline\">\\(1,2,\\ldots,i\\)</span>的前缀积，那么我们就可以用前缀积的方式，将阶乘法推广，来求任意\r\n<span class=\"math inline\">\\(n\\)</span> 个数 <span\r\nclass=\"math inline\">\\(a_1,a_2,\\ldots,a_n\\)</span> 各自的逆元.</p>\r\n<h4 id=\"过程\">过程</h4>\r\n<p><span class=\"math display\">\\[\\begin{aligned}\r\n\\text{显然}&amp;\\space{\\left({\\prod_{k=1}^i{a_k} }\\right)}^{-1}={\r\n{\\left({\\prod_{k=1}^{i+1}a_k}\\right)}^{-1} }\\times a_{i+1},&amp;(1)\\\\\r\n&amp;\\space\r\na_i^{-1}=\\frac{\\prod_{k=1}^{i-1}a_k}{\\prod_{k=1}^ia_k}=\\left(\\prod_{k=1}^{i-1}a_k\\right)\\left({\\prod_{k=1}^{i}a_k}\\right)^{-1}&amp;(2)\r\n\\end{aligned}\\]</span> 只需据<span\r\nclass=\"math inline\">\\((1)(2)\\)</span>逆推即可。我们把求积改为前缀积实现，即可大大优化算法。</p>\r\n<h4 id=\"实现-1\">实现</h4>\r\n<p>以下是前缀积逆推的伪代码</p>\r\n$$\r\n<span class=\"math display\">\\[\\begin{array}{ll}\r\n&amp; \\textbf{Prefix product Modular Multiplicative Inverse Solving\r\nAlgorithm }\\operatorname{getInverses}(\\textbf{n},\\textbf{p},\\mathbf{\r\n{^*}a}):\\\\\r\n\r\n\r\n1 &amp; \\textbf{Parameters. } n,p\\in\\mathbb{N}^+,p\\text{ is a {prime}\r\n},\\text{$a$ is a \\textbf{pointer} to the address of the first element of\r\n\\textbf{an array of $n$ factors} }.\\\\\r\n\r\n\r\n&amp; \\text{Denoting the number of factors $n$ ,the modulus $p$ and the\r\nsequence $a$.}\\\\\r\n2 &amp; \\textbf{Returned value. } \\text{An array that holds the inverse\r\nof each }a_i.\\\\\r\n3 &amp; \\textbf{Method.}\\\\\r\n4 &amp; {prod}_{\\operatorname{(new)}0}\\gets 1\\\\\r\n&amp; \\mathtt{Note:}\\ prod_i={\\prod_{k=1}^ia_k}\\texttt{,which denotes\r\nthe }i^{\\operatorname{th} } \\texttt{ prefix product in } a.\\\\\r\n5 &amp; \\textbf{for }i_{\\operatorname{\\textbf{(new)} } }\\textbf{ from\r\n}1\\textbf{ to }n\\textbf{ do}\\\\\r\n6 &amp; \\qquad prod_i\\gets prod_{i-1}\\times a_i\\bmod p\\\\\r\n7 &amp; \\textbf{end}\\\\\r\n8 &amp; G_{\\operatorname{(new)}\r\n}\\gets\\operatorname{exgcd}(prod_{n},p,x_{\\operatorname{(new)}\r\n},y_{\\operatorname{(new)} })\\\\\r\n9 &amp; {invprod}_{\\operatorname{(new)}n}\\gets(x\\bmod p+p)\\bmod p\\\\\r\n{(\\mathbf{i})} &amp;\\overline{\\texttt{It&#39;s equivalent to the code\r\nbelow.} }\\\\\r\n\\mathit9 &amp; \\underline{invprod_{\\operatorname{(new)}n}\\gets\r\nprod_n^{p-2}\\bmod p\\hspace{1.3cm} }\\\\\r\n&amp; \\mathtt{Note:}\\\r\n{invprod}_{i}={\\left(\\prod_{k=1}^ia_k\\right)}^{-1}\\texttt{,which denotes\r\nthe inverse of the prefix product of }a_i.\\\\\r\n10 &amp; inv_{\\operatorname{(new)}n}\\gets invprod_{n}\\times\r\nprod_{n-1}\\bmod p\\\\\r\n&amp; \\mathtt{Note:}\\ {inv}_{i}=a_i^{-1}\\texttt{,which denotes the\r\ninverse of }a_i.\\\\\r\n11 &amp; \\textbf{for } i_{\\operatorname{(new)} }\\textbf{ from\r\n}n-1\\textbf{ to } 1\\textbf{ do}\\\\\r\n12 &amp; \\qquad invprod_i\\gets {invprod}_{i+1}\\cdot a_{i+1}\\bmod p\\\\\r\n13 &amp; \\qquad inv_i\\gets {invprod}_{i}\\times {prod}_{i-1}\\bmod p\\\\\r\n14 &amp; \\textbf{end}\\\\\r\n15 &amp; \\textbf{return }inv\r\n\\end{array}\\]</span>\r\n<p>$$</p>\r\n<h4 id=\"复杂度-3\">复杂度</h4>\r\n<p>类似阶乘法，为 <span class=\"math display\">\\[\\operatorname{O}(n+\\log\r\np)\\]</span></p>\r\n<h4 id=\"优劣-4\">优劣</h4>\r\n<h5 id=\"优势-3\">优势</h5>\r\n<p>前缀积逆推法能够求解任意 <span class=\"math inline\">\\(n\\)</span>\r\n个数的逆元，更加灵活。</p>\r\n<h5 id=\"劣势\">劣势</h5>\r\n<ul>\r\n<li>局限性：仅能模数为素数。</li>\r\n<li>需要用到单个数求逆元。</li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"乘法逆元\">乘法逆元</h1>\r\n<h2 id=\"定义\">定义</h2>\r\n<p>数 <span class=\"math inline\">\\(a\\)</span> 模 <span\r\nclass=\"math inline\">\\(p\\)</span> 意义下的<strong>乘法逆元</strong>(<span\r\nclass=\"math inline\">\\(\\texttt{Modular Multiplicative\r\nInverse}\\)</span>)被定义为 <em>线性同余方程</em> <span\r\nclass=\"math inline\">\\(ax\\equiv 1 \\pmod p\\)</span>的解。</p>\r\n<h2 id=\"条件\">条件</h2>\r\n<span class=\"math inline\">\\(\\gcd(a,p)=1\\)</span>是数 <span\r\nclass=\"math inline\">\\(a\\)</span> 在模 <span\r\nclass=\"math inline\">\\(p\\)</span> 意义下存在乘法逆元的充分必要条件。 ##\r\n求法 ### 1.扩展欧几里得法\r\n既然乘法逆元是线性同余方程的解，那么使用扩展欧几里得算法<span\r\nclass=\"math inline\">\\((\\texttt{Extended Euclidean algorithm,\r\nEXGCD})\\)</span>求出方程的通解。再经转换即可求出特解。 #### 过程\r\n将同余方程 <span class=\"math inline\">\\(ax\\equiv 1 \\pmod p\\)</span>\r\n改写为如下形式 $$\r\n<span class=\"math display\">\\[\\begin{aligned}\r\nax+py &amp;=1 &amp;(1)\r\n\r\n\\end{aligned}\\]</span>\r\n<p>$$</p>\r\n<p>其中<span\r\nclass=\"math inline\">\\(x,y\\)</span>是未知数。显然，这两个方程是等价的。\r\n&gt; 由裴蜀定理可得，方程<span class=\"math inline\">\\(ax\\equiv b \\pmod\r\np\\)</span> <strong>有整数解</strong>的充分必要条件是 <span\r\nclass=\"math inline\">\\(\\gcd(a,p)\\mid 1\\)</span> ，且容易将其转换为: <span\r\nclass=\"math inline\">\\(\\gcd(a,p)=1\\)</span> &gt; &gt;\r\n也就是说，满足如下条件时，才能使用扩展欧几里得算法求解逆元： &gt; <span\r\nclass=\"math display\">\\[\\gcd(a,p)=1\\]</span> &gt; 即需要 <span\r\nclass=\"math inline\">\\(a,p\\)</span> 互质。</p>\r\n<p>所以我们可将等式<span\r\nclass=\"math inline\">\\((1)\\)</span>再次改写为</p>\r\n<p><span class=\"math display\">\\[ax+py=\\gcd(a,p)\\]</span></p>\r\n<p>这就化为扩欧求解方程的一般形式 <span\r\nclass=\"math inline\">\\(ax+by=\\gcd(a,b)\\)</span>\r\n了。接下来使用扩欧求解即可</p>\r\n<p><span class=\"math display\">\\[\\begin{aligned}\r\n\\text{设}&amp;:\\\\\r\n&amp;ax_{1}+py_{1}=\\gcd(a,p)\\\\\r\n&amp;px_2+(a\\bmod p)y_2=\\gcd(p,a\\bmod p)\\\\\r\n\\because&amp;\\space\\text{由欧几里得定理知}\\ \\gcd(a,p)=\\gcd(p,a\\bmod p)\\\\\r\n\\therefore&amp;\\space ax_{2}+py_{1}=px_2+(a\\bmod p)y_2\\\\\r\n\\because&amp;\\space a\\bmod p=a-\\lfloor\\frac{a}{p}\\rfloor p\\\\\r\n\\therefore&amp;\\space ax_1+py_1=px_2+\\left(a-\\lfloor\\frac{a}{p}\\rfloor\r\np\\right)y_2\\\\\r\n\\therefore\\space\r\n&amp;ax_1+py_1=ay_2+p\\left(x_2-\\lfloor\\frac{a}{p}\\rfloor y_2\\right)\\\\\r\n\\because&amp;\\space a=a,p=p\\\\\r\n\\therefore&amp;\\space \\text{比对法可得}\\\\\r\n&amp;\\begin{cases}\r\nx_1=y_2,\\\\\r\ny_1=x_2-\\lfloor\\frac{a}{p}\\rfloor y_2.\r\n\\end{cases}\r\n\\end{aligned}\\]</span> 由此我们得到了 <span\r\nclass=\"math inline\">\\(x_1,y_1\\)</span> 与 <span\r\nclass=\"math inline\">\\(x_2,y_2\\)</span>之间的关系，又因为它们都与 <span\r\nclass=\"math inline\">\\(\\gcd(a,p)\\)</span> 有关，所以只需要将 <span\r\nclass=\"math inline\">\\(x_2,y_2\\)</span> 在求<span\r\nclass=\"math inline\">\\(\\gcd(a,p)\\)</span>的过程中一并计算，辗转相除直到\r\n<span class=\"math inline\">\\(p_i=0,\\gcd(a_i,p_i)=a_i\\)</span> 时返回<span\r\nclass=\"math inline\">\\(x_2=1,y_2=0\\)</span>\r\n来递归求解即可求出在线性同余方程 <span class=\"math inline\">\\(ax\\equiv 1\r\n\\pmod p\\)</span> 中 <span class=\"math inline\">\\(x\\)</span> 的通解。</p>\r\n<p>求出<strong>通解</strong> <span class=\"math inline\">\\(x_0\\)</span>\r\n后，一个<strong>特解</strong>(<em>最小正整数解</em> )即为</p>\r\n<p><span class=\"math display\">\\[\\begin{aligned}\r\nx&amp;=\\left(x_0\\bmod\r\n\\frac{p}{\\gcd(a,p)}+\\frac{p}{\\gcd(a,p)}\\right)\\bmod\r\n\\frac{p}{\\gcd(a,p)}\\\\\r\n&amp;=\\left(x_0\\bmod \\frac{p}{1}+\\frac{p}{1}\\right)\\bmod \\frac{p}{1}\\\\\r\n&amp;=\\left(x_0\\bmod p+p\\right)\\bmod p.\r\n\\end{aligned}\\]</span></p>\r\n<p><span class=\"math inline\">\\(a\\)</span> 在模 <span\r\nclass=\"math inline\">\\(p\\)</span> 意义下的乘法逆元即为 <span\r\nclass=\"math inline\">\\(x\\)</span> 的值。 #### 实现\r\n以下是扩展欧几里得算法的伪代码</p>\r\n$$\r\n<span class=\"math display\">\\[\\begin{array}{ll}\r\n&amp;\\textbf{Extended Euclidean algorithm\r\n}\\operatorname{exgcd}(\\mathbf{a}, \\mathbf{b}, ⇒{\\mathbf{x} },\r\n⇒\\mathbf{y})\\text{:} \\\\\r\n1 &amp;  \\textbf{Parameters. } a,b\\in\\mathbb{Z}^+,b\\ne0.\\space x \\text{\r\nand } y \\text{ are bit references}.\\\\\r\n  &amp;  \\text{Denoting the }a,b,x\\text{ and }y\\text{ in the equation }\r\n\\boxed{ax+by=\\operatorname{gcd}(a,b)}. \\\\\r\n  &amp;\\text{Initialize } x\\gets\\varnothing,y\\gets\\varnothing\\\\\r\n2 &amp;  \\textbf{Return value. } \\text{The GCD between }a\\text{ and\r\n}b.\\\\\r\n  &amp;  \\textbf{Accompanying results }x\\text{ and }y \\text{ is the\r\nsolution to the equation}.\\\\\r\n3 &amp;  \\textbf{Method. } \\\\\r\n4 &amp;  \\textbf{if }b=0 \\\\\r\n5 &amp;  \\qquad x\\gets1 \\\\\r\n6 &amp;  \\qquad y\\gets0\\\\\r\n7 &amp;  \\qquad \\textbf{return }\\ a \\\\\r\n8 &amp;  {result}_{ {\\operatorname{\\textbf{(new)} } }\r\n}\\gets\\operatorname{exgcd}\\left(b,a\\bmod b,x,y\\right) \\\\\r\n&amp;  (\\texttt{At this point the values of }x\\texttt{ and }y\\texttt{\r\nhave changed}.)\\\\\r\n9 &amp;  x_{2{\\operatorname{\\textbf{(new)} } } }\\gets x\\\\\r\n11 &amp; y_{2{\\operatorname{\\textbf{(new)} } } }\\gets y\\\\\r\n12 &amp;  x\\gets y_2\\\\\r\n13 &amp; y\\gets x_2-\\lfloor\\dfrac{a}{b}\\rfloor y_2\\\\\r\n14 &amp;  \\textbf{return }\\ result\\\\\r\n\r\n\\end{array}\\]</span>\r\n<p>$$</p>\r\n<h4 id=\"复杂度\">复杂度</h4>\r\n<p>扩展欧几里得算法的时间复杂度与欧几里得算法（辗转相除法）无异，均为</p>\r\n<p><span class=\"math display\">\\[\\text{O}(\\log p) \\]</span></p>\r\n<h4 id=\"优劣\">优劣</h4>\r\n<h5 id=\"优势\">优势</h5>\r\n<p>扩展欧几里得法求解乘法逆元只需满足 <span\r\nclass=\"math inline\">\\(\\gcd(a,p)=1,\\)</span>\r\n即原数与模数互质即可，而后文提到其他算法均，需另外要求 <span\r\nclass=\"math inline\">\\(p\\)</span> 为质数，即模数要为质数。 ###### 劣势 -\r\n扩展欧几里得法求解乘法逆元的过程较为复杂，记忆较困难。</p>\r\n<ul>\r\n<li><p>速度：大多使用递归实现辗转相除法，比其他迭代实现的算法常数要高一些，跑得慢。</p></li>\r\n<li><p>在求多个数逆元时必须多次运算，复杂度高，所以一般只能用于求出单个数的逆元。</p></li>\r\n</ul>\r\n<hr />\r\n<h3 id=\"快速幂法\">2.快速幂法</h3>\r\n<p>当 <span class=\"math inline\">\\(\\gcd(a,p)=1,\\)</span><strong><span\r\nclass=\"math inline\">\\(\\boldsymbol{p}\\)</span>为质数</strong>\r\n时,借助费马小定理<span class=\"math inline\">\\((\\texttt{Fermat&#39;s\r\nLittle Theorem})\\)</span>可转化同余方程 <span\r\nclass=\"math inline\">\\(ax\\equiv 1 \\pmod p\\)</span>，得其通解 <span\r\nclass=\"math inline\">\\(x_0=a^{p-2}\\)</span> #### 过程 <span\r\nclass=\"math display\">\\[\\begin{aligned}\r\n\\because&amp;\\space\\text{当 } p\\text{ 为质数时}:\\\\\r\n&amp;\\space a^{p-1}\\equiv1{\\pmod p}\\text{ (费马小定理)}\\\\\r\n\\text{又}&amp;\\space ax\\equiv 1 \\pmod p\\\\\r\n\\therefore&amp;\\space ax\\equiv a^{p-1}\\pmod{p}\\\\\r\n\\because&amp;\\space \\gcd(a,p)=1\\\\\r\n\\therefore&amp;\\space x\\equiv a^{p-2}\\pmod{p}\r\n\\end{aligned}\\]</span> 然后即可用快速幂求出 <span\r\nclass=\"math inline\">\\(a^{p-2}\\)</span> 的值，即求出一个通解 <span\r\nclass=\"math inline\">\\(x_0\\)</span> 了</p>\r\n<p>在大部分情况下<span class=\"math inline\">\\(,a&gt;0,\\)</span> 所以此时\r\n<span class=\"math inline\">\\(a^{p-2}&gt;0\\)</span>\r\n，求不求特解都无所谓了。</p>\r\n<h4 id=\"实现\">实现</h4>\r\n以下是快速幂法求解逆元的伪代码 $$\r\n<span class=\"math display\">\\[\\begin{array}{ll}\r\n&amp;\\overline{\\underline{\\textbf{Modular Multiplicative Inverse Solving\r\nAlgorithm by Exponentiation} } }\\\\\r\n1 &amp; \\textbf{Fast Power Algorithm }\r\n\\operatorname{exponentiation}(\\mathbf{a},\\mathbf{b},\\mathbf{p})\\text{:}\\\\\r\n2 &amp; \\textbf{Parameters. } a,b,p\\in\\mathbb{N}^+.\\\\\r\n  &amp; \\text{Denoting the base } a,\\text{the exponent }b\\text{ and the\r\nmodulus }p.\\\\\r\n3 &amp; \\textbf{Returned value. }\\text{the value of }\\boxed{a^b\\bmod{p}\r\n}\\\\\r\n4 &amp; \\textbf{Method.}\\\\\r\n5 &amp; {base}_{\\operatorname{\\textbf{(new)} } }\\gets a\\\\\r\n6 &amp; result_{\\operatorname{\\textbf{(new)} } }\\gets 1\\\\\r\n7 &amp; \\textbf{while}\\space b&gt;0\\space\\textbf{do}\\\\\r\n8 &amp; \\qquad \\textbf{if }2\\nmid b\\textbf{ then}\\\\\r\n9 &amp; \\qquad \\qquad result\\gets result\\cdot base\\bmod{p}\\\\\r\n10 &amp; \\qquad base\\gets {base}^{2}\\bmod p\\\\\r\n11 &amp; \\qquad b\\gets\\lfloor\\dfrac{b}{2}\\rfloor\\\\\r\n12 &amp; \\textbf{end}\\\\\r\n13 &amp; \\textbf{return } result\\\\\\\\\r\n14 &amp; \\textbf{Multiplicative Inverse Solving Algorithm\r\n}\\text{getInverse(\\textbf{a},\\textbf{p}):}\\\\\r\n15 &amp; \\textbf{Parameters. } a,p\\in\\mathbb{N}^+,a\\ne\r\n0,\\gcd(a,p)=1,p\\text{ is a prime}.\\\\\r\n  &amp; \\text{Denoting the coefficient } a\\text{ and the modulus }p\r\n\\text{ in the congruence equation}\\boxed{ax\\equiv 1\\pmod{p} }.\\\\\r\n16 &amp; \\textbf{Returned value. }\\text{the modular multiplicative\r\ninverse of $a$: }\\space a^{-1},\\\\\r\n&amp; \\text{which is the solution to the congruence\r\nequation}\\boxed{ax\\equiv 1\\pmod{p} }.\\\\\r\n\r\n17 &amp; \\textbf{Method.}\\\\\r\n18 &amp; result_{\\operatorname{\\textbf{({new})} }\r\n}\\gets\\operatorname{exponentiation}(a,p-2,p)\\bmod{p}\\\\\r\n&amp; \\textbf{return }result\r\n\\end{array}\\]</span>\r\n<p>$$</p>\r\n<h4 id=\"复杂度-1\">复杂度</h4>\r\n<p>快速幂求逆元的复杂度就是快速幂的复杂度，即</p>\r\n<p><span class=\"math display\">\\[\\text{O}(\\log p)\\]</span></p>\r\n<h4 id=\"优劣-1\">优劣</h4>\r\n<h5 id=\"优势-1\">优势</h5>\r\n<p>快速幂法求逆元十分容易记忆理解，代码难度小。使用迭代实现快速幂，常数小。\r\n##### 劣势 - 局限性：只能用于求模数为质数情况下的逆元，局限性较大。</p>\r\n<ul>\r\n<li>还是只在求单个数逆元时快。</li>\r\n</ul>\r\n<hr />\r\n<h3 id=\"线性迭代法\">3.线性迭代法</h3>\r\n<p>为求出<span class=\"math inline\">\\(1,2,\\dots,n\\)</span>这<span\r\nclass=\"math inline\">\\(n\\)</span>个数中每个数 <span\r\nclass=\"math inline\">\\(a\\)</span> 在模 <span\r\nclass=\"math inline\">\\(p\\)</span> 意义下的逆元 <span\r\nclass=\"math inline\">\\(a^{-1}\\)</span>\r\n，上文两种方法就很慢了，我们需要使用线性方法在$(n)\r\n$复杂度内求出每个数的逆元才不会超时。 #### 过程 <span\r\nclass=\"math display\">\\[\\begin{aligned}\r\n&amp;\\space \\text{对于正整数 }a\\ (1\\leq a\\leq n),\\text{有}\\\\\r\n&amp;\\space p=a\\lfloor\\frac{p}{a}\\rfloor+p\\bmod a\\\\\r\n\\because&amp;\\space p\\equiv 0\\pmod{p}\\\\\r\n\\therefore&amp;\\space a\\lfloor\\frac{p}{a}\\rfloor+p\\bmod a\\equiv\r\n0\\pmod{p}\\\\\r\n&amp;\\space \\text{将同余式两边同时乘以 }a^{-1}(p\\bmod\r\na)^{-1}\\text{得到}\\\\\r\n&amp;\\space \\lfloor\\frac{p}{a}\\rfloor\\left(p\\bmod\r\na\\right)^{-1}+a^{-1}\\equiv 0\\pmod{p}\\\\\r\n\\therefore&amp;\\space a^{-1}\\equiv -\r\n\\lfloor\\frac{p}{a}\\rfloor\\left(p\\bmod a\\right)^{-1}\\pmod{p}\\\\\r\n\\because&amp;\\space \\text{显然 }1^{-1}\\equiv 1\\pmod p,\\text{且 }p\\bmod\r\na&lt; a\\\\\r\n&amp;\\space \\text{也就是说，正向递推求解$a^{-1}$是可行的.}\\\\\r\n\\therefore&amp;\\space \\text{可得出从$a=1$开始，$a^{-1}$的递推式}:\\\\\r\n&amp;\\space a^{-1}\\equiv\\begin{cases}\r\n1&amp;\\text{if }a=1,\\\\\r\n-\\lfloor\\dfrac{p}{a}\\rfloor\\left(p\\bmod\r\na\\right)^{-1}&amp;\\text{otherwise.}\r\n\\end{cases}\r\n\\end{aligned}\\]</span> 这样我们在已经迭代求出所有<span\r\nclass=\"math inline\">\\(i^{-1}(i&lt;a)\\)</span>的情况下就可以求出<span\r\nclass=\"math inline\">\\(a^{-1}\\)</span>的值了。</p>\r\n<p><span\r\nclass=\"math inline\">\\((\\textbf{!})\\)</span>但是，有一点需要注意：由于\r\nC++\r\n取模运算的特殊性，被<strong>负数</strong>取模得到的值<strong>还是负数</strong>，这是我们绝对不想看到的，所以我们在具体代码实现时，需要将\r\n<span class=\"math inline\">\\(-\\lfloor\\dfrac{p}{a}\\rfloor\\)</span> 改写为\r\n<span\r\nclass=\"math inline\">\\(\\left(p-\\lfloor\\dfrac{p}{a}\\rfloor\\right)\\)</span>\r\n来实现等价而不会出现负数的操作。 #### 实现\r\n以下是线性递推迭代求解逆元方法的伪代码 <span class=\"math display\">\\[\r\n\\begin{array}{ll}\r\n&amp; \\textbf{Linear Modular Multiplicative Inverse Solving Algorithm\r\n}\\operatorname{getInverses}(\\textbf{n},\\textbf{p}):\\\\\r\n1 &amp; \\textbf{Parameters. } n,p\\in\\mathbb{N}^+,p\\text{ is a prime}.\\\\\r\n&amp; \\text{Denoting the number of factors $n$ ,the modulus $b$}\\\\\r\n2 &amp; \\textbf{Returned value. } \\text{An array that holds the inverse\r\nof each a}.\\\\\r\n3 &amp; \\textbf{Method.}\\\\\r\n4 &amp; {inv}_{\\operatorname{\\textbf{(new)} }1}=1\\\\\r\n&amp; \\mathtt{Note:}\\ {inv}_{i}=i^{-1}\\texttt{,which denotes the inverse\r\nof }i.\\\\\r\n5 &amp; \\textbf{for }i_{\\operatorname{\\textbf{(new)} } }\\textbf{ from\r\n}2\\textbf{ to }n\\textbf{ do}\\\\\r\n6 &amp; \\qquad\r\n{inv}_i\\gets\\left(p-\\lfloor\\dfrac{p}{i}\\rfloor\\right)\\cdot{inv}_{(p\\bmod\r\ni)}\\bmod p\\\\\r\n7 &amp; \\textbf{end}\\\\\r\n8 &amp; \\textbf{return }inv\r\n\\end{array}\r\n\\]</span> #### 复杂度</p>\r\n<p>显然为 <span class=\"math display\">\\[\\operatorname{O}(n)\\]</span></p>\r\n<h4 id=\"优劣-2\">优劣</h4>\r\n<h5 id=\"优势-2\">优势</h5>\r\n<p>在要求序列<span\r\nclass=\"math inline\">\\(1,2,\\ldots,n\\)</span>里每个数的乘法逆元时，扩欧法和快速幂法都需要<span\r\nclass=\"math inline\">\\(\\operatorname{O}(n\\log\r\np)\\)</span>的复杂度来解决，此时<span\r\nclass=\"math inline\">\\(\\operatorname{O}(n)\\)</span>的线性算法就占很大优势。另外线性递推算法在数据范围小且模数确定时还可以用于打表，贴到代码上<span\r\nclass=\"math inline\">\\(\\operatorname{O}(1)\\)</span>就行了，嘻嘻。 #####\r\n劣势 - 局限性：仅当模数为质数时，线性递推法才可用 &gt;\r\n证明：感性理解一下，由于仅当 <span\r\nclass=\"math inline\">\\(\\gcd(a,p)=1\\)</span> 时线性同余方程 &gt; <span\r\nclass=\"math inline\">\\(ax\\equiv1\\pmod{p}\\)</span> 才有解，<span\r\nclass=\"math inline\">\\(a^{-1}\\)</span>才存在，那么当 <span\r\nclass=\"math inline\">\\(p\\)</span> 不为质数时， &gt;\r\n要使线性递推法可用，<span class=\"math inline\">\\(1,2,\\ldots,n\\)</span>\r\n每个数都必须与 <span class=\"math inline\">\\(p\\)</span>\r\n互质，这怎么可能呢？ - 仅在求<span\r\nclass=\"math inline\">\\(1,2,\\ldots,n\\)</span>的逆元时才占优势，偏要将递推式转为递归求解单个数逆元已知的复杂度上界仅为<span\r\nclass=\"math inline\">\\(\\operatorname{O(\\sqrt[3]{n})}\\)</span>，更优的算法有扩欧法和快速幂法。</p>\r\n<hr />\r\n<h3 id=\"阶乘逆推法\">4.阶乘逆推法</h3>\r\n<p>同样是求<span class=\"math inline\">\\(1,2,\\dots,n\\)</span>这<span\r\nclass=\"math inline\">\\(n\\)</span>个数中每个数 <span\r\nclass=\"math inline\">\\(a\\)</span> 在模 <span\r\nclass=\"math inline\">\\(p\\)</span> 意义下的逆元 <span\r\nclass=\"math inline\">\\(a^{-1}\\)</span>，有没有一种更易于理解的方法呢？答案是肯定的。我们只需要利用逆元与原数相乘抵消成单位元的性质，即可利用阶乘求解。\r\n#### 过程 <span class=\"math display\">\\[\\begin{aligned}\r\n\\text{显然}&amp;\\space{i!}^{-1}={(i+1)!}^{-1}\\times(i+1),&amp;(1)\\\\\r\n&amp;\\space i^{-1}=\\frac{(i-1)!}{i!}=(i-1)!\\cdot {i!}^{-1}&amp;(2)\r\n\\end{aligned}\\]</span> 所以对于<span\r\nclass=\"math inline\">\\(1,2,\\dots,n\\)</span>，我们先处理出<span\r\nclass=\"math inline\">\\(1\\)</span>至<span\r\nclass=\"math inline\">\\(n\\)</span>的阶乘(模 <span\r\nclass=\"math inline\">\\(p\\)</span> 意义下)，然后只需要跑一遍 扩展欧几里得\r\n或 快速幂(<span class=\"math inline\">\\(p\\)</span>为质数) 求出 <span\r\nclass=\"math inline\">\\(n!^{-1}\\)</span>，然后依据<span\r\nclass=\"math inline\">\\((1)\\)</span>逆推就能依次求出<span\r\nclass=\"math inline\">\\((n-1)!^{-1},(n-2)!^{-1},\\ldots,2!^{-1},1!^{-1}\\)</span>的值，同时在迭代求出<span\r\nclass=\"math inline\">\\(i!^{-1}\\)</span>后，由于<span\r\nclass=\"math inline\">\\(i!,(i-1)!\\)</span>已经被预处理出来了，即可用<span\r\nclass=\"math inline\">\\((2)\\)</span>求出<span\r\nclass=\"math inline\">\\(i^{-1}\\)</span>. #### 实现\r\n以下是阶乘逆推法求逆元的伪代码 <span class=\"math display\">\\[\r\n\\begin{array}{ll}\r\n&amp; \\textbf{Factorial Modular Multiplicative Inverse Solving Algorithm\r\n}\\operatorname{getInverses}(\\textbf{n},\\textbf{p}):\\\\\r\n1 &amp; \\textbf{Parameters. } n,p\\in\\mathbb{N}^+,p\\text{ is a prime}.\\\\\r\n&amp; \\text{Denoting the number of factors $n$ and the modulus $p$}\\\\\r\n2 &amp; \\textbf{Returned value. } \\text{An array that holds the inverse\r\nof each }a\\in\\mathbb{N^+}\\cap[1,n].\\\\\r\n3 &amp; \\textbf{Method.}\\\\\r\n4 &amp; {fac}_{\\operatorname{(new)}0}\\gets 1\\\\\r\n5 &amp; {fac}_{1}\\gets 1\\\\\r\n&amp; \\mathtt{Note:}\\ {fac}_{i}=i!\\texttt{,which denotes the factorial\r\nof }i.\\\\\r\n6 &amp; \\textbf{for }i_{\\operatorname{\\textbf{(new)} } }\\textbf{ from\r\n}2\\textbf{ to }n\\textbf{ do}\\\\\r\n8 &amp; \\qquad fac_i\\gets fac_{i-1}\\times i\\bmod p\\\\\r\n9 &amp; \\textbf{end}\\\\\r\n9 &amp; G_{\\operatorname{(new)}\r\n}\\gets\\operatorname{exgcd}(fac_{n},p,x_{\\operatorname{(new)}\r\n},y_{\\operatorname{(new)} })\\\\\r\n10 &amp; {invfac}_{\\operatorname{(new)}n}\\gets(x\\bmod p+p)\\bmod p\\\\\r\n{(\\mathbf{i})} &amp;\\overline{\\texttt{It&#39;s equivalent to the code\r\nbelow.} }\\\\\r\n\\mathit{10} &amp; \\underline{invfac_{\\operatorname{(new)}n}\\gets\r\nfac_n^{p-2}\\bmod p\\hspace{1.3cm} }\\\\\r\n&amp; \\mathtt{Note:}\\ {invfac}_{i}=i!^{-1}\\texttt{,which denotes the\r\ninverse of the factorial of }i.\\\\\r\n11 &amp; inv_{\\operatorname{(new)}n}\\gets invfac_{n}\\times\r\nfac_{n-1}\\bmod p\\\\\r\n&amp; \\mathtt{Note:}\\ {inv}_{i}=i^{-1}\\texttt{,which denotes the inverse\r\nof }i.\\\\\r\n12 &amp; \\textbf{for } i_{\\operatorname{(new)} }\\textbf{ from\r\n}n-1\\textbf{ to } 1\\textbf{ do}\\\\\r\n13 &amp; \\qquad invfac_i\\gets {invfac}_{i+1}(i+1)\\bmod p\\\\\r\n14 &amp; \\qquad inv_i\\gets {invfac}_{i}\\times {fac}_{i-1}\\bmod p\\\\\r\n15 &amp; \\textbf{end}\\\\\r\n16 &amp; \\textbf{return }inv\r\n\\end{array}\r\n\\]</span></p>\r\n<h4 id=\"复杂度-2\">复杂度</h4>\r\n<p>求 <span class=\"math inline\">\\(n!^{-1}\\)</span> 的复杂度是<span\r\nclass=\"math inline\">\\(\\operatorname{O}(\\log p)\\)</span>,求 <span\r\nclass=\"math inline\">\\(n!\\)</span> 与迭代逆推的复杂度均为<span\r\nclass=\"math inline\">\\(\\operatorname{O}(n)\\)</span>，所以总复杂度是 <span\r\nclass=\"math display\">\\[\\operatorname{O}(n+\\log p)\\]</span></p>\r\n<h4 id=\"优劣-3\">优劣</h4>\r\n<p>同线性迭代法.</p>\r\n<hr />\r\n<h3 id=\"前缀积逆推-求任意n个数逆元\">5.前缀积逆推-求任意n个数逆元</h3>\r\n<p>首先我们注意到，使用阶乘逆推法时，由于是从 <span\r\nclass=\"math inline\">\\(n\\)</span> 开始逆推，并不依赖从 <span\r\nclass=\"math inline\">\\(1\\)</span> 开始到 <span\r\nclass=\"math inline\">\\(n\\)</span>\r\n的条件。其次，我们使用阶乘只是为了利用逆元与原数相消的性质，完全可以把阶乘\r\n<span class=\"math inline\">\\(i!\\)</span> 看成是<span\r\nclass=\"math inline\">\\(1,2,\\ldots,i\\)</span>的前缀积，那么我们就可以用前缀积的方式，将阶乘法推广，来求任意\r\n<span class=\"math inline\">\\(n\\)</span> 个数 <span\r\nclass=\"math inline\">\\(a_1,a_2,\\ldots,a_n\\)</span> 各自的逆元.</p>\r\n<h4 id=\"过程\">过程</h4>\r\n<p><span class=\"math display\">\\[\\begin{aligned}\r\n\\text{显然}&amp;\\space{\\left({\\prod_{k=1}^i{a_k} }\\right)}^{-1}={\r\n{\\left({\\prod_{k=1}^{i+1}a_k}\\right)}^{-1} }\\times a_{i+1},&amp;(1)\\\\\r\n&amp;\\space\r\na_i^{-1}=\\frac{\\prod_{k=1}^{i-1}a_k}{\\prod_{k=1}^ia_k}=\\left(\\prod_{k=1}^{i-1}a_k\\right)\\left({\\prod_{k=1}^{i}a_k}\\right)^{-1}&amp;(2)\r\n\\end{aligned}\\]</span> 只需据<span\r\nclass=\"math inline\">\\((1)(2)\\)</span>逆推即可。我们把求积改为前缀积实现，即可大大优化算法。</p>\r\n<h4 id=\"实现-1\">实现</h4>\r\n<p>以下是前缀积逆推的伪代码</p>\r\n$$\r\n<span class=\"math display\">\\[\\begin{array}{ll}\r\n&amp; \\textbf{Prefix product Modular Multiplicative Inverse Solving\r\nAlgorithm }\\operatorname{getInverses}(\\textbf{n},\\textbf{p},\\mathbf{\r\n{^*}a}):\\\\\r\n\r\n\r\n1 &amp; \\textbf{Parameters. } n,p\\in\\mathbb{N}^+,p\\text{ is a {prime}\r\n},\\text{$a$ is a \\textbf{pointer} to the address of the first element of\r\n\\textbf{an array of $n$ factors} }.\\\\\r\n\r\n\r\n&amp; \\text{Denoting the number of factors $n$ ,the modulus $p$ and the\r\nsequence $a$.}\\\\\r\n2 &amp; \\textbf{Returned value. } \\text{An array that holds the inverse\r\nof each }a_i.\\\\\r\n3 &amp; \\textbf{Method.}\\\\\r\n4 &amp; {prod}_{\\operatorname{(new)}0}\\gets 1\\\\\r\n&amp; \\mathtt{Note:}\\ prod_i={\\prod_{k=1}^ia_k}\\texttt{,which denotes\r\nthe }i^{\\operatorname{th} } \\texttt{ prefix product in } a.\\\\\r\n5 &amp; \\textbf{for }i_{\\operatorname{\\textbf{(new)} } }\\textbf{ from\r\n}1\\textbf{ to }n\\textbf{ do}\\\\\r\n6 &amp; \\qquad prod_i\\gets prod_{i-1}\\times a_i\\bmod p\\\\\r\n7 &amp; \\textbf{end}\\\\\r\n8 &amp; G_{\\operatorname{(new)}\r\n}\\gets\\operatorname{exgcd}(prod_{n},p,x_{\\operatorname{(new)}\r\n},y_{\\operatorname{(new)} })\\\\\r\n9 &amp; {invprod}_{\\operatorname{(new)}n}\\gets(x\\bmod p+p)\\bmod p\\\\\r\n{(\\mathbf{i})} &amp;\\overline{\\texttt{It&#39;s equivalent to the code\r\nbelow.} }\\\\\r\n\\mathit9 &amp; \\underline{invprod_{\\operatorname{(new)}n}\\gets\r\nprod_n^{p-2}\\bmod p\\hspace{1.3cm} }\\\\\r\n&amp; \\mathtt{Note:}\\\r\n{invprod}_{i}={\\left(\\prod_{k=1}^ia_k\\right)}^{-1}\\texttt{,which denotes\r\nthe inverse of the prefix product of }a_i.\\\\\r\n10 &amp; inv_{\\operatorname{(new)}n}\\gets invprod_{n}\\times\r\nprod_{n-1}\\bmod p\\\\\r\n&amp; \\mathtt{Note:}\\ {inv}_{i}=a_i^{-1}\\texttt{,which denotes the\r\ninverse of }a_i.\\\\\r\n11 &amp; \\textbf{for } i_{\\operatorname{(new)} }\\textbf{ from\r\n}n-1\\textbf{ to } 1\\textbf{ do}\\\\\r\n12 &amp; \\qquad invprod_i\\gets {invprod}_{i+1}\\cdot a_{i+1}\\bmod p\\\\\r\n13 &amp; \\qquad inv_i\\gets {invprod}_{i}\\times {prod}_{i-1}\\bmod p\\\\\r\n14 &amp; \\textbf{end}\\\\\r\n15 &amp; \\textbf{return }inv\r\n\\end{array}\\]</span>\r\n<p>$$</p>\r\n<h4 id=\"复杂度-3\">复杂度</h4>\r\n<p>类似阶乘法，为 <span class=\"math display\">\\[\\operatorname{O}(n+\\log\r\np)\\]</span></p>\r\n<h4 id=\"优劣-4\">优劣</h4>\r\n<h5 id=\"优势-3\">优势</h5>\r\n<p>前缀积逆推法能够求解任意 <span class=\"math inline\">\\(n\\)</span>\r\n个数的逆元，更加灵活。</p>\r\n<h5 id=\"劣势\">劣势</h5>\r\n<ul>\r\n<li>局限性：仅能模数为素数。</li>\r\n<li>需要用到单个数求逆元。</li>\r\n</ul>\r\n"},{"abbrlink":"","date":"2023-11-04T13:56:31.671Z","title":"Qexotest","updated":"2023-11-04T14:10:33.716Z","_content":"Qexotest\n","source":"_posts/Qexotest.md","raw":"---\nabbrlink: ''\ncategories: []\ndate: '2023-11-04T21:56:31.671012+08:00'\ntags: []\ntitle: Qexotest\nupdated: 2023-11-4T21:56:38.875+8:0\n---\nQexotest\n","slug":"Qexotest","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clok4ov4b0000lcs49eu6eklb","content":"<p>Qexotest</p>\r\n","site":{"data":{}},"excerpt":"","more":"<p>Qexotest</p>\r\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}